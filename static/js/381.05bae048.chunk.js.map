{"version":3,"file":"static/js/381.05bae048.chunk.js","mappings":"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","sources":["content/club/Apply/index.tsx"],"sourcesContent":["import axios, { type AxiosResponse } from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useEffect, useState } from 'react'\nimport { useAuthHeader, useAuthUser } from 'react-auth-kit'\nimport { Helmet } from 'react-helmet-async'\nimport { useNavigate, useParams } from 'react-router'\n\nimport {\n  Box,\n  Button,\n  FormControl,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  TextField as MuiTextField,\n  Paper,\n  Select,\n  type SelectChangeEvent,\n  type TextFieldProps,\n  TextareaAutosize,\n  Typography,\n  useMediaQuery\n} from '@mui/material'\nimport { styled, useTheme } from '@mui/material/styles'\n\nimport departments from 'src/data/departments'\nimport { HELPER_TEXT_MESSAGE } from 'src/data/messages'\n\nimport { formatLikePhoneNumber } from 'src/utils/formatLikePhoneNumber '\n\nimport type { Applicant } from 'src/models/Applicant'\nimport type { ClubMemberForAuth } from 'src/models/ClubMember'\nimport type { Form } from 'src/models/Form'\nimport type { Recruit } from 'src/models/Recruit'\n\ntype FormAPIResponse = Form\n\ntype ApplyAPIResponse = Applicant['answers']\n\nconst Apply: React.FC = () => {\n  const MAX_LENGTH_PER_ANSWER = 1000\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n  const { enqueueSnackbar } = useSnackbar()\n\n  const [questions, setQuestions] = useState<string[]>([])\n  const [recruitId, setRecruitId] = useState<Recruit['id']>()\n  // TODO : id 달지 않고 들어오는 경우 처리\n  const { id } = useParams()\n  const clubId = Number(id)\n  const authHeader = useAuthHeader()\n  const navigate = useNavigate()\n  const authUser = useAuthUser()\n  const [values, setValues] = useState({\n    name: authUser()?.name,\n    phoneNumber: authUser()?.phoneNumber,\n    department: authUser()?.department,\n    answers: [] as Array<string> // TODO: api 분리하면서 응답값 타입으로 useState 지정하기\n  })\n\n  // 이미 회원인경우 접근 차단\n  const isMember = authUser()?.clubs.filter((c: ClubMemberForAuth) => c.id === clubId).length > 0\n  if (isMember) {\n    enqueueSnackbar('이미 가입된 동아리입니다.', { variant: 'error' })\n    navigate(-1)\n  }\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | SelectChangeEvent<string>\n  ) => {\n    const { name, value } = event.target\n    setValues(prevValues => ({ ...prevValues, [name]: value }))\n\n    if (event.target instanceof HTMLInputElement && event.target.name === 'name') {\n      const name = event.target\n      const trimmedName = name.value.trim()\n      const regex = /^[a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣 ]*$/\n      const isValid = regex.test(name.value)\n\n      if (trimmedName !== name.value) {\n        name.setCustomValidity('이름 앞뒤에 공백문자를 포함할 수 없습니다.')\n        return\n      }\n      if (!isValid) {\n        name.setCustomValidity('이름에 특수문자를 포함할 수 없습니다.')\n        return\n      }\n      name.setCustomValidity('')\n    }\n  }\n\n  const handleAnswerChange: React.ChangeEventHandler<HTMLTextAreaElement> = ({ target: { name, value } }) => {\n    setValues(prev => {\n      const index = Number(name)\n      const nextAnswers = [...prev.answers]\n      nextAnswers[index] = value\n      return { ...prev, answers: nextAnswers }\n    })\n  }\n\n  const handlePhoneNumberChange: React.ChangeEventHandler<HTMLTextAreaElement> = ({ target: { value } }) => {\n    setValues(prevState => ({ ...prevState, phoneNumber: formatLikePhoneNumber(value) }))\n  }\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = e => {\n    e.preventDefault()\n\n    const body = Object.assign({}, values)\n\n    axios\n      .post<ApplyAPIResponse>(`${process.env.REACT_APP_APIHOST}/apply/form?recruitId=${recruitId}`, body, {\n        headers: { Authorization: authHeader() }\n      })\n      .then(() => {\n        enqueueSnackbar('동아리에 지원서를 제출했어요! 좋은 결과 있기를 바라요 :)', { variant: 'success' })\n        navigate(`/club/${clubId}`)\n      })\n      .catch(err =>\n        enqueueSnackbar(err.response.data?.message ?? '서버에서 오류가 발생한 것 같아요. 다시 시도해주세요', {\n          variant: 'error'\n        })\n      )\n  }\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_APIHOST}/club/${clubId}/recruit/`)\n      .then((res: AxiosResponse<Recruit>) => {\n        setRecruitId(res.data.id)\n\n        const startAt = new Date(res.data.startAt)\n        const endAtNextDay = new Date(res.data.endAt)\n        const today = new Date()\n\n        // 마감일 23시 59분 59초까지 지원할 수 있도록 하루 더함\n        endAtNextDay.setDate(endAtNextDay.getDate() + 1)\n\n        // 지원 기간 내가 아닐 경우 접근 차단\n        if (!(startAt <= today && today <= endAtNextDay)) {\n          enqueueSnackbar('지금은 지원 기간이 아닙니다.', { variant: 'error' })\n          navigate(-1)\n        }\n      })\n      .catch(err => {\n        enqueueSnackbar(`${err.response.data?.message}`, { variant: 'error' })\n        navigate(-1)\n      })\n\n    // TODO : url 뒤에 / 떼면 301 Moved Permanently 에러뜸\n    axios\n      .get<FormAPIResponse>(`${process.env.REACT_APP_APIHOST}/club/${clubId}/form/`)\n      .then(res => {\n        const { questions } = res.data\n        setQuestions(questions)\n      })\n      .catch(err =>\n        enqueueSnackbar(err.response.data?.message ?? '서버에서 오류가 발생한 것 같아요. 다시 시도해주세요', {\n          variant: 'error'\n        })\n      )\n  }, [])\n\n  return (\n    <PageWrapper>\n      <Helmet>\n        <title>동아리 지원</title>\n      </Helmet>\n      <Paper\n        square={matches ? false : true}\n        sx={{\n          my: theme.spacing(8),\n          padding: 3,\n          flex: 1,\n          maxWidth: '480px',\n          [theme.breakpoints.down('sm')]: {\n            my: 0,\n            py: 5,\n            maxWidth: '100%'\n          }\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h3\" sx={{ mb: 2, textAlign: 'center' }}>\n          동아리 지원서\n        </Typography>\n        <Box\n          component=\"form\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            '& .MuiTextField-root': { margin: 1 }\n          }}\n          onSubmit={handleSubmit}\n        >\n          <TextField\n            id=\"email\"\n            type=\"email\"\n            label=\"이메일\"\n            disabled\n            defaultValue={authUser()?.email}\n            inputProps={{ readOnly: true }}\n          />\n          <TextField\n            id=\"student-id\"\n            type=\"text\"\n            label=\"학번\"\n            disabled\n            defaultValue={authUser()?.studentId}\n            inputProps={{ readOnly: true }}\n          />\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            label=\"이름\"\n            inputProps={{ maxLength: 50 }}\n            defaultValue={authUser()?.name}\n            onChange={handleChange}\n          />\n          <TextField\n            id=\"phone-number\"\n            name=\"phoneNumber\"\n            type=\"tel\"\n            label=\"전화번호\"\n            inputProps={{ pattern: '010-[0-9]{4}-[0-9]{4}', maxLength: 13 }}\n            defaultValue={authUser()?.phoneNumber}\n            helperText={HELPER_TEXT_MESSAGE.PHONE_NUMBER}\n            value={values.phoneNumber}\n            onChange={handlePhoneNumberChange}\n          />\n          <FormControl sx={{ margin: 1, width: '100%' }} size=\"small\" required>\n            <InputLabel htmlFor=\"department\">학과/학부</InputLabel>\n            <Select\n              id=\"department\"\n              name=\"department\"\n              label=\"학과/학부\"\n              defaultValue={authUser()?.department || ''}\n              onChange={handleChange}\n              fullWidth\n            >\n              {departments &&\n                Object.keys(departments).map(college => [\n                  <ListSubheader sx={{ fontWeight: 'bold' }}>{college}</ListSubheader>,\n                  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                  // @ts-ignore\n                  departments[college] &&\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    departments[college].map((depart: string) => [\n                      <MenuItem value={college === depart ? depart : college + ' ' + depart}>{depart}</MenuItem>\n                    ])\n                ])}\n            </Select>\n          </FormControl>\n          {!authUser()?.phoneNumber && (\n            <Box>\n              <Typography variant=\"body1\" display=\"inline\">\n                입력하신 정보는 동아리 관리를 위해 서버에 저장됩니다.\n              </Typography>\n            </Box>\n          )}\n\n          {questions?.filter(q => q).length > 0 && (\n            <>\n              <Typography variant=\"h6\" sx={{ marginTop: 1, marginBottom: theme.spacing(0.5) }}>\n                지원서 질문\n              </Typography>\n              {questions.map((question, index) => (\n                <Box width=\"100%\" key={index} sx={{ marginBottom: 1 }}>\n                  <Typography variant=\"subtitle1\" sx={{ marginBottom: theme.spacing(0.5), textAlign: 'left' }}>\n                    {question}\n                  </Typography>\n                  <CustomTextareaAutosize\n                    minRows={4}\n                    maxRows={6}\n                    name={`${index}`}\n                    maxLength={MAX_LENGTH_PER_ANSWER}\n                    onChange={handleAnswerChange}\n                  />\n                  <Typography variant=\"subtitle1\" textAlign=\"right\">\n                    {(values.answers[index] ?? '').length} / {MAX_LENGTH_PER_ANSWER}\n                  </Typography>\n                </Box>\n              ))}\n            </>\n          )}\n          <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 1 }}>\n            지원서 제출\n          </Button>\n        </Box>\n      </Paper>\n    </PageWrapper>\n  )\n}\n\nexport default Apply\n\nconst PageWrapper = styled(Box)(\n  () => `\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    `\n)\nconst CustomTextareaAutosize = styled(TextareaAutosize)`\n  padding: 8px;\n  width: 100%;\n  border-radius: 5px;\n  border: 1px solid lightgrey;\n  font-family: 'Pretendard';\n`\n\nconst TextField = (props: TextFieldProps) => <MuiTextField size=\"small\" required fullWidth {...props} />\n"],"names":["_authUser","_authUser2","_authUser3","_authUser4","_authUser5","_authUser6","_authUser7","_authUser8","_authUser9","_authUser10","theme","useTheme","matches","useMediaQuery","breakpoints","up","enqueueSnackbar","useSnackbar","_useState","useState","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","recruitId","setRecruitId","id","useParams","clubId","Number","authHeader","useAuthHeader","navigate","useNavigate","authUser","useAuthUser","_useState5","name","phoneNumber","department","answers","_useState6","values","setValues","clubs","filter","c","length","variant","handleChange","event","_event$target","target","value","prevValues","_objectSpread","_defineProperty","HTMLInputElement","trimmedName","trim","isValid","test","setCustomValidity","handleAnswerChange","_ref","_ref$target","prev","index","nextAnswers","_toConsumableArray","useEffect","axios","get","concat","process","then","res","data","startAt","Date","endAtNextDay","endAt","today","setDate","getDate","catch","err","_err$response$data2","response","message","_err$response$data$me2","_err$response$data3","_jsxs","PageWrapper","children","_jsx","Helmet","Paper","square","sx","my","spacing","padding","flex","maxWidth","down","py","Typography","component","mb","textAlign","Box","display","flexDirection","alignItems","margin","onSubmit","e","preventDefault","body","Object","assign","post","headers","Authorization","_err$response$data$me","_err$response$data","TextField","type","label","disabled","defaultValue","email","inputProps","readOnly","studentId","maxLength","onChange","pattern","helperText","HELPER_TEXT_MESSAGE","PHONE_NUMBER","_ref2","prevState","formatLikePhoneNumber","FormControl","width","size","required","InputLabel","htmlFor","Select","fullWidth","departments","keys","map","college","ListSubheader","fontWeight","depart","MenuItem","q","_Fragment","marginTop","marginBottom","question","_values$answers$index","CustomTextareaAutosize","minRows","maxRows","Button","mt","styled","TextareaAutosize","_templateObject","_taggedTemplateLiteral","props","MuiTextField"],"sourceRoot":""}