{"version":3,"file":"static/js/203.d9effe6a.chunk.js","mappings":"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","sources":["components/ClubPreview/index.tsx","components/PageTitleWrapper/index.tsx","components/ClubList/index.tsx","content/club/Search/index.tsx"],"sourcesContent":["import { Box, Card, CardActionArea, CardContent, Chip, Stack, Typography, useMediaQuery, useTheme } from '@mui/material'\n\nimport { CLUB_TYPES, type ClubType } from 'src/data/types'\n\nimport { stringToColor } from 'src/utils'\n\nexport interface ClubPreviewProps {\n  id: number\n  name: string\n  category: string\n  type: ClubType\n  description: string\n}\n\nfunction ClubPreview({ id, name, category, type, description }: ClubPreviewProps) {\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n\n  return (\n    <Card>\n      <CardActionArea href={`/club/${id}`} sx={{ display: 'flex', flexDirection: matches ? 'column' : 'row' }}>\n        <Box width={matches ? '100%' : '90px'} height=\"90px\" sx={{ backgroundColor: stringToColor(name, 0.3) }} />\n        <CardContent sx={{ flex: 1, width: '100%' }}>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {name}\n          </Typography>\n          {matches && (\n            <Typography\n              variant=\"body2\"\n              color=\"text.secondary\"\n              whiteSpace=\"nowrap\"\n              overflow=\"hidden\"\n              textOverflow=\"ellipsis\"\n            >\n              {description}\n            </Typography>\n          )}\n          <Stack direction=\"row\" justifyContent=\"flex-start\" spacing={1} sx={{ marginTop: theme.spacing(1) }}>\n            {CLUB_TYPES[type] && (\n              <Chip\n                label={CLUB_TYPES[type].name}\n                size=\"small\"\n                sx={{ padding: theme.spacing(0.5), fontSize: matches ? 13 : 11 }}\n              />\n            )}\n            {category && (\n              <Chip label={category} size=\"small\" sx={{ padding: theme.spacing(0.5), fontSize: matches ? 13 : 11 }} />\n            )}\n          </Stack>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n\nexport default ClubPreview\n","import PropTypes from 'prop-types'\nimport { FC, ReactNode } from 'react'\n\nimport { Box, Container, styled } from '@mui/material'\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(3)};\n`\n)\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  )\n}\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default PageTitleWrapper\n","import { Grid } from '@mui/material'\n\nimport ClubPreview, { type ClubPreviewProps } from 'src/components/ClubPreview'\n\ninterface ClubListProps {\n  clubs: ClubPreviewProps[]\n}\n\nfunction ClubList({ clubs }: ClubListProps) {\n  return (\n    <Grid container spacing={2}>\n      {clubs &&\n        clubs.map(club => (\n          <Grid item xs={12} sm={6} md={4} lg={3} key={`${club.id} ${club.name}`}>\n            <ClubPreview {...club} />\n          </Grid>\n        ))}\n    </Grid>\n  )\n}\n\nexport default ClubList\n","import axios from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport { useSearchParams } from 'react-router-dom'\n\nimport SearchIcon from '@mui/icons-material/Search'\nimport {\n  Box,\n  Container,\n  FormControl,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Pagination,\n  Select,\n  type SelectChangeEvent,\n  Stack,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from '@mui/material'\n\nimport orders from 'src/data/SortingOrders'\nimport CATEGORIES from 'src/data/categories'\nimport departments from 'src/data/departments'\nimport { CLUB_TYPES, type ClubType } from 'src/data/types'\n\nimport ClubList from 'src/components/ClubList'\nimport { type ClubPreviewProps } from 'src/components/ClubPreview'\nimport PageTitleWrapper from 'src/components/PageTitleWrapper'\n\ninterface SearchAPIResponse {\n  clubs: ClubPreviewProps[]\n  numPages: number\n}\n\nconst SELECT_COMPONENT_WIDTH = '160px'\n\nfunction Search() {\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n  const [searchParams, setSearchParams] = useSearchParams()\n  const [params, setParams] = useState({\n    name: searchParams.get('name') ?? '',\n    category: searchParams.get('category') ?? '',\n    type: searchParams.get('type') ?? '',\n    page: searchParams.has('page') ? parseInt(searchParams.get('page') || '1') : null,\n    order: searchParams.has('order') ? searchParams.get('order') : ''\n  })\n  const [clubs, setClubs] = useState<ClubPreviewProps[]>([])\n  const [numPages, setNumPages] = useState(1)\n  const { enqueueSnackbar } = useSnackbar()\n  const isDepartmentClubSearchPage = params.type === 'DEPARTMENT_CLUB'\n\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = event => {\n    event.preventDefault()\n    const search = document.getElementById('search') as HTMLInputElement\n    setParams(prev => ({ ...prev, name: search.value, page: null, order: '' }))\n  }\n  const handleChange = ({\n    target: { name, value }\n  }: React.ChangeEvent<HTMLInputElement> | SelectChangeEvent<string>) => {\n    setParams(prev => ({ ...prev, [name]: value, page: null, category: name === 'type' ? '' : prev.category }))\n  }\n\n  const handlePageChange = (event: React.ChangeEvent<HTMLInputElement | unknown>, value: number) =>\n    setParams(prev => ({ ...prev, page: value === 1 ? null : value }))\n\n  useEffect(() => {\n    const newParams = Object.assign(\n      {},\n      params.name ? { name: params.name } : null,\n      params.category ? { category: params.category } : null,\n      params.type ? { type: params.type } : null,\n      params.page ? { page: params.page } : null,\n      params.order ? { order: params.order } : null\n    )\n    setSearchParams(newParams)\n  }, [params])\n\n  useEffect(() => {\n    const apiParams = Object.assign(\n      {},\n      params.name ? { name: params.name } : null,\n      params.category ? { category: params.category } : null,\n      params.type ? { type: params.type } : null,\n      params.page ? { page: params.page } : null,\n      { count: 12 },\n      params.order ? { order: params.order } : null\n    )\n    axios\n      .get<SearchAPIResponse>(`${process.env.REACT_APP_APIHOST}/search/clubs`, {\n        params: apiParams\n      })\n      .then(res => {\n        setNumPages(res.data?.numPages)\n        setClubs(res.data?.clubs ?? [])\n        if (res.data?.clubs?.length === 0)\n          enqueueSnackbar('주어진 조건에 해당하는 동아리가 없어요 T.T', { variant: 'warning' })\n      })\n      .catch(err =>\n        enqueueSnackbar(err.response.data?.message ?? '서버에서 오류가 발생한 것 같아요. 다시 시도해주세요', {\n          variant: 'error'\n        })\n      )\n  }, [searchParams])\n\n  return (\n    <>\n      <Helmet>\n        <title>검색 결과</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <Stack direction=\"row\" alignItems=\"baseline\">\n              <Typography variant=\"h3\" component=\"h3\" gutterBottom sx={{ marginRight: 1 }}>\n                {params.type === '' ? '검색 결과' : CLUB_TYPES[params.type as ClubType].name}\n              </Typography>\n              <Typography variant=\"inherit\" gutterBottom>\n                {params.category}\n              </Typography>\n            </Stack>\n            <Typography variant=\"subtitle2\">키워드와 카테고리, 분류를 활용해 원하는 동아리를 찾아보세요</Typography>\n          </Grid>\n        </Grid>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <FormControl variant=\"outlined\" fullWidth sx={{ marginTop: 2, backgroundColor: 'white' }}>\n            <OutlinedInput\n              id=\"search\"\n              type=\"search\"\n              placeholder=\"동아리 이름을 검색해보세요\"\n              defaultValue={params.name}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton aria-label=\"Search clubs\" type=\"submit\" edge=\"end\">\n                    <SearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </Box>\n      </PageTitleWrapper>\n      <Container\n        sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignItems: 'center' }}\n      >\n        <Stack\n          width=\"100%\"\n          direction={matches ? 'row' : 'column'}\n          spacing={1}\n          justifyContent={'flex-end'}\n          sx={{ marginBottom: 3 }}\n        >\n          {isDepartmentClubSearchPage ? (\n            <FormControl size=\"small\" fullWidth={!matches}>\n              <InputLabel id=\"department-label\">단과대</InputLabel>\n              <Select\n                labelId=\"department-label\"\n                id=\"department\"\n                name=\"category\"\n                label=\"단과대\"\n                value={params.category}\n                onChange={handleChange}\n                sx={{ minWidth: SELECT_COMPONENT_WIDTH }}\n              >\n                <MenuItem value=\"\">선택하지 않음</MenuItem>\n                {Object.keys(departments)?.map(department => (\n                  <MenuItem key={department} value={department}>\n                    {department}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          ) : (\n            <FormControl size=\"small\" fullWidth={!matches}>\n              <InputLabel id=\"category-label\">카테고리</InputLabel>\n              <Select\n                labelId=\"category-label\"\n                id=\"category\"\n                name=\"category\"\n                label=\"카테고리\"\n                value={params.category}\n                onChange={handleChange}\n                sx={{ minWidth: SELECT_COMPONENT_WIDTH }}\n              >\n                <MenuItem value=\"\">선택하지 않음</MenuItem>\n                {CATEGORIES?.map(category => (\n                  <MenuItem key={category} value={category}>\n                    {category}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          )}\n\n          <FormControl size=\"small\" fullWidth={!matches}>\n            <InputLabel id=\"type-label\">분류</InputLabel>\n            <Select\n              labelId=\"type-label\"\n              id=\"type\"\n              name=\"type\"\n              label=\"분류\"\n              value={params.type}\n              onChange={handleChange}\n              sx={{ minWidth: SELECT_COMPONENT_WIDTH }}\n            >\n              <MenuItem value=\"\">선택하지 않음</MenuItem>\n              {CLUB_TYPES &&\n                Object.entries(CLUB_TYPES).map(([key, { name }]) => (\n                  <MenuItem key={key} value={key}>\n                    {name}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n          <FormControl size=\"small\" fullWidth={!matches}>\n            <InputLabel id=\"order-label\">정렬</InputLabel>\n            <Select\n              labelId=\"order-label\"\n              id=\"order\"\n              name=\"order\"\n              label=\"정렬\"\n              value={params.order ?? ''}\n              onChange={handleChange}\n              sx={{ minWidth: SELECT_COMPONENT_WIDTH }}\n            >\n              <MenuItem value=\"\">선택하지 않음</MenuItem>\n              {orders &&\n                Object.entries(orders).map(([key, value]) => (\n                  <MenuItem key={key} value={key}>\n                    {value}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </Stack>\n        <ClubList clubs={clubs} />\n        <Pagination\n          page={params.page ?? 1}\n          count={numPages ?? 1}\n          size={matches ? 'medium' : 'small'}\n          onChange={handlePageChange}\n          sx={{ my: 3 }}\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default Search\n"],"names":["_ref","id","name","category","type","description","theme","useTheme","matches","useMediaQuery","breakpoints","up","_jsx","Card","children","_jsxs","CardActionArea","href","concat","sx","display","flexDirection","Box","width","height","backgroundColor","stringToColor","CardContent","flex","Typography","gutterBottom","variant","component","color","whiteSpace","overflow","textOverflow","Stack","direction","justifyContent","spacing","marginTop","CLUB_TYPES","Chip","label","size","padding","fontSize","PageTitle","styled","_ref2","className","Container","maxWidth","clubs","Grid","container","map","club","item","xs","sm","md","lg","ClubPreview","_objectSpread","SELECT_COMPONENT_WIDTH","_searchParams$get","_searchParams$get2","_searchParams$get3","_Object$keys","_params$order","_params$page","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","get","page","has","parseInt","order","_useState2","params","setParams","_useState3","_useState4","setClubs","_useState5","_useState6","numPages","setNumPages","enqueueSnackbar","useSnackbar","isDepartmentClubSearchPage","handleChange","_ref$target","target","value","prev","_objectSpread2","_defineProperty","useEffect","newParams","Object","assign","apiParams","count","axios","process","then","res","_res$data","_res$data$clubs","_res$data2","_res$data3","_res$data3$clubs","data","length","catch","err","_err$response$data$me","_err$response$data","response","message","_Fragment","Helmet","PageTitleWrapper","alignItems","marginRight","onSubmit","event","preventDefault","search","document","getElementById","FormControl","fullWidth","OutlinedInput","placeholder","defaultValue","endAdornment","InputAdornment","position","IconButton","edge","SearchIcon","marginBottom","InputLabel","Select","labelId","onChange","minWidth","MenuItem","keys","departments","department","CATEGORIES","entries","_ref3","key","orders","_ref4","_ref5","ClubList","Pagination","my"],"sourceRoot":""}