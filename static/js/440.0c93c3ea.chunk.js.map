{"version":3,"file":"static/js/440.0c93c3ea.chunk.js","mappings":"kJAyCA,IA7B0D,SAAHA,GAMzB,IAL5BC,EAAYD,EAAZC,aACAC,EAAYF,EAAZE,aAAYC,EAAAH,EACZI,iBAAAA,OAAgB,IAAAD,GAAOA,EAAAE,EAAAL,EACvBM,cAAAA,OAAa,IAAAD,EAAG,eAAIA,EAAAE,EAAAP,EACpBQ,cAAAA,OAAa,IAAAD,EAAG,eAAIA,EAEdE,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,GAAI,EAAGC,GAAI,EAAGC,UAAU,MAAMC,QAAS,EAAGC,eAAe,SAAQC,SAAA,CACrEd,IACCe,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,MAAM,QAAQC,QAAQ,WAAWC,GAAI,CAAEC,MAAO,MAAOC,SAAU,SAAWC,QARtB,SAAAC,QAC3CC,IAAjB1B,EAA4BO,GAAU,GACrCP,EAAayB,EACpB,EAK+GT,SACtGV,KAILW,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,MAAM,UAAUC,QAAQ,YAAYI,QAASzB,EAAcsB,GAAI,CAAEC,MAAO,MAAOC,SAAU,SAAUP,SACxGZ,MAIT,C,8SCuDA,EAnFgC,WAC9B,IAAMuB,GAAiBC,EAAAA,EAAAA,QAAyB,MACxCC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAASC,OAAOH,GAChBtB,GAAWC,EAAAA,EAAAA,MACTyB,GAAoBC,EAAAA,EAAAA,MAApBD,gBACRE,GAAoCC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAsBL,EAAAA,EAAAA,YAA4BM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GACZG,GAAoBC,EAAAA,EAAAA,MAEpB/C,EAAY,eAAAD,GAAAiD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEdd,GAAQA,EAAIe,OAAgC,KAApB,OAAHf,QAAG,IAAHA,GAAU,QAAPQ,EAAHR,EAAKe,aAAK,IAAAP,OAAP,EAAHA,EAAYQ,QAAY,CAAAJ,EAAAE,KAAA,QACO,OAAvDxB,EAAgB,wEAAkB,CAAEb,QAAS,UAAUmC,EAAAK,OAAA,iBAM5B,OAFvBR,EAAOT,EAAIe,MAAM,IACjBL,EAAW,IAAIQ,UACZC,OAAO,OAAQV,GAAKG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGrBZ,EAAkBkB,YAAY,CAAEhC,OAAAA,EAAQsB,SAAAA,IAAW,OACzD9C,EAAS,WAADyD,OAAYjC,EAAM,YAAUwB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,kCAAAA,EAAAW,OAAA,GAAAhB,EAAA,mBAEvC,kBAfiB,OAAApD,EAAAqE,MAAA,KAAAC,UAAA,KAiBlB,OACE3D,EAAAA,EAAAA,MAAC4D,EAAAA,EAAI,CAAChD,GAAI,CAAEiD,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAMzD,SAAA,EAC7CC,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAACtD,QAAQ,KAAKuD,MAAM,SAASC,GAAI,EAAGzD,MAAO0D,EAAAA,EAAeC,OAAOC,QAAQC,KAAKhE,SAAC,kDAG1FP,EAAAA,EAAAA,MAACiE,EAAAA,EAAU,CAACO,aAAc,EAAGN,MAAM,SAAQ3D,SAAA,EACzCC,EAAAA,EAAAA,KAACiE,EAAAA,EAAI,CAACC,KAAMC,mFAAyCC,OAAO,SAAQrE,SAAC,iBAE9D,yRAITC,EAAAA,EAAAA,KAACqE,EAAAA,EAAO,KAERrE,EAAAA,EAAAA,KAACsE,EAAAA,EAAG,CAAC5E,GAAI,EAAGiE,GAAI,EAAGY,UAAW,EAAExE,UAC9BC,EAAAA,EAAAA,KAACsE,EAAAA,EAAG,CAACE,OAAQ,GAAGzE,SACbuB,GACCtB,EAAAA,EAAAA,KAACsE,EAAAA,EAAG,CAAAvE,UACFP,EAAAA,EAAAA,MAACS,EAAAA,EAAM,CAACE,QAAQ,WAAWsE,WAAS,EAACrE,GAAI,CAAEoE,OAAQ,OAAQE,QAAS,SAAWxE,MAAM,UAASH,SAAA,CAAC,6BAE7FC,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAACtD,QAAQ,YAAWJ,SAAC,qGAIpCP,EAAAA,EAAAA,MAAC8E,EAAAA,EAAG,CAAAvE,SAAA,EACFC,EAAAA,EAAAA,KAAA,SACE0B,IAAKhB,EACLiE,KAAK,OACLC,OAAO,oEACPC,MAAO,CAAEH,QAAS,QAClBI,SAAU,SAAAC,GACqB,IAADC,EAAAC,EAAAC,EAAAC,EAAxBzE,EAAe0E,UACjBzD,EAAOjB,EAAe0E,SACtB7D,IAAsB,QAARyD,EAAAD,EAAEX,cAAM,IAAAY,GAAO,QAAPC,EAARD,EAAUvC,aAAK,IAAAwC,IAAfA,EAAiBvC,UAAiB,QAARwC,EAAAH,EAAEX,cAAM,IAAAc,GAAO,QAAPC,EAARD,EAAUzC,aAAK,IAAA0C,OAAP,EAARA,EAAiBzC,QAAS,GAEtE,KAEFlD,EAAAA,EAAAA,MAACS,EAAAA,EAAM,CACLM,QAAS,kBAAMG,EAAe0E,SAAW1E,EAAe0E,QAAQC,OAAO,EACvElF,QAAQ,WACRsE,WAAS,EACTrE,GAAI,CAAEoE,OAAQ,OAAQE,QAAS,SAAU3E,SAAA,CAC1C,sFAECC,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAACtD,QAAQ,YAAWJ,SAAC,gFAO1CC,EAAAA,EAAAA,KAACsF,EAAAA,EAAgB,CAACxG,aAAcA,EAAcK,cAAc,mBAGlE,E,wHCgJA,EAvM+B,WAC7B,IAAMoG,GAAS1E,EAAAA,EAAAA,MACTC,EAASC,OAAOwE,EAAO3E,IACrBI,GAAoBC,EAAAA,EAAAA,MAApBD,gBACRE,GAA4BC,EAAAA,EAAAA,UAAqB,CAC/CqE,UAAW,GACXC,KAAM,GACNC,YAAa,GACbC,MAAO,GACPC,WAAY,KACZxE,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GANK2E,EAAMzE,EAAA,GAAE0E,EAAS1E,EAAA,GAOxBI,GAAsDL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9DuE,EAAmBtE,EAAA,GAAEuE,EAAsBvE,EAAA,GAsB5CwE,EAAqB,SAACR,GAC1B,IAAMS,EAAcT,EAAKU,OAEzB,MADe,yDACDC,KAAKX,IAASS,IAAgBT,CAC9C,EAEMY,GAAqBC,EAAAA,EAAAA,IAAcxF,GAAMyF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC1CV,GAAM,IACTH,YAAaG,EAAOH,aAAe,KACnCC,MAAOE,EAAOF,OAAS,QAGnB7G,EAAY,eAAAD,GAAAiD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACdqD,EAAOL,WAAcK,EAAOJ,KAAI,CAAAnD,EAAAE,KAAA,QACyB,OAA5DxB,EAAgB,4FAAuB,CAAEb,QAAS,UAAUmC,EAAAK,OAAA,oBAjC/B6C,EAqCFK,EAAOL,UApCrB,kCACDY,KAAKZ,GAmC4B,CAADlD,EAAAE,KAAA,QACY,OAAxDxB,EAAgB,yEAAmB,CAAEb,QAAS,UAAUmC,EAAAK,OAAA,qBAItDkD,EAAOH,cArCsBA,EAqCoBG,EAAOH,YApC7C,0CACDU,KAAKV,IAmCqD,CAAApD,EAAAE,KAAA,QACe,OAArFxB,EAAgB,kKAAgD,CAAEb,QAAS,UAAUmC,EAAAK,OAAA,qBAGnFkD,EAAOF,OAA0B,KAAjBE,EAAOF,QApCAA,EAoCqCE,EAAOF,MAnCxD,4CACDS,KAAKT,IAkC0D,CAAArD,EAAAE,KAAA,SAChB,OAA3DxB,EAAgB,2FAAsB,CAAEb,QAAS,UAAUmC,EAAAK,OAAA,qBClGrC,SAAC6D,GAG3B,IAFA,IAAIC,EAAO,EAEFC,EAAI,EAAGA,EAAIF,EAAI9D,OAAQgE,IAAK,CACnC,IAAMC,EAAOH,EAAII,WAAWF,GAG1BD,GADEE,EAAO,KAEAA,EAAO,IAAMA,EAAO,GADrB,EAIA,CAEZ,CAEA,OAAOF,CACT,CDmDWI,CAmCiBhB,EAAOJ,MArDd,GAqDoB,CAADnD,EAAAE,KAAA,SACkC,OAApExB,EAAgB,wHAA+B,CAAEb,QAAS,UAAUmC,EAAAK,OAAA,qBAIjEsD,EAAmBJ,EAAOJ,MAAM,CAADnD,EAAAE,KAAA,SAGhC,OAFFxB,EAAgB,qNAAiD,CAC/Db,QAAS,UACTmC,EAAAK,OAAA,qBAICkD,EAAOD,WAAW,CAADtD,EAAAE,KAAA,SACkC,OAAtDxB,EAAgB,kEAAiB,CAAEb,QAAS,UAAUmC,EAAAK,OAAA,yBAAAL,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAKhD6D,EAAmBvD,cAAa,QACtCgD,EAAU,CACRN,UAAW,GACXC,KAAM,GACNC,YAAa,GACbC,MAAO,GACPC,WAAYG,EAAsB,GAAKF,EAAOD,aAC9CtD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,mCAAAA,EAAAW,OA7DqB,IALE0C,EALMD,EALFF,CA4E3B,GAAAvD,EAAA,oBAEL,kBA/CiB,OAAApD,EAAAqE,MAAA,KAAAC,UAAA,KAoDlB,OACE3D,EAAAA,EAAAA,MAAC4D,EAAAA,EAAI,CAAChD,GAAI,CAAEiD,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAMzD,SAAA,EAC7CC,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAACtD,QAAQ,KAAKuD,MAAM,SAASC,GAAI,EAAGzD,MAAO0D,EAAAA,EAAeC,OAAOC,QAAQC,KAAKhE,SAAC,4CAG1FP,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACG,UAAU,SAASQ,GAAI,CAAE0G,OAAQ,EAAG9C,aAAc,GAAIjE,SAAA,EAC3DC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAS,CACRC,UAAQ,EACRpG,GAAG,YACHqG,MAAM,eACN9G,QAAQ,WACR+G,MAAOrB,EAAOL,UACd2B,WAAY,CAAEC,UAAW,IACzBtC,SAAU,SAAAC,GAAC,OACTe,GAAU,SAAAuB,GACR,OAAAd,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYc,GAAS,IAAE7B,UAAWT,EAAEX,OAAO8C,OAC7C,GAAE,EAEJ9G,GAAI,CAAE0G,OAAQ,OAEhB9G,EAAAA,EAAAA,KAAC+G,EAAAA,EAAS,CACRC,UAAQ,EACRpG,GAAG,OACHqG,MAAM,eACN9G,QAAQ,WACR+G,MAAOrB,EAAOJ,KACd0B,WAAY,CAAEC,UAAW,IACzBtC,SAAU,SAAAC,GAAC,OACTe,GAAU,SAAAuB,GACR,OAAAd,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYc,GAAS,IAAE5B,KAAMV,EAAEX,OAAO8C,OACxC,GAAE,EAEJ9G,GAAI,CAAE0G,OAAQ,OAEhB9G,EAAAA,EAAAA,KAAC+G,EAAAA,EAAS,CACRnG,GAAG,cACHqG,MAAM,2BACNK,WAAYC,EAAAA,GAAoBC,aAChCrH,QAAQ,WACR+G,MAAOrB,EAAOH,YACdZ,SA5CuE,SAAH2C,GAA+B,IAAfP,EAAKO,EAAfrD,OAAU8C,MAC1FpB,GAAU,SAAAuB,GAAS,OAAAd,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUc,GAAS,IAAE3B,aAAagC,EAAAA,EAAAA,GAAsBR,IAAM,GACnF,EA2CQ9G,GAAI,CAAE0G,OAAQ,IACdK,WAAY,CAAEQ,QAAS,wBAAyBP,UAAW,OAG7DpH,EAAAA,EAAAA,KAAC+G,EAAAA,EAAS,CACRnG,GAAG,QACHqG,MAAM,uCACN9G,QAAQ,WACR+G,MAAOrB,EAAOF,MACdb,SAAU,SAAAC,GAAC,OACTe,GAAU,SAAAuB,GACR,OAAAd,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYc,GAAS,IAAE1B,MAAOZ,EAAEX,OAAO8C,OACzC,GAAE,EAEJ9G,GAAI,CAAE0G,OAAQ,OAGhBtH,EAAAA,EAAAA,MAACoI,EAAAA,EAAW,CAACxH,GAAI,CAAEV,GAAI,EAAGW,MAAO,QAAUwH,KAAK,QAAQb,UAAQ,EAAAjH,SAAA,EAC9DC,EAAAA,EAAAA,KAAC8H,EAAAA,EAAU,CAACC,QAAQ,aAAYhI,SAAC,+BACjCC,EAAAA,EAAAA,KAACgI,EAAAA,EAAM,CACLpH,GAAG,aACHsG,MAAOrB,EAAOD,WACdH,KAAK,aACLwB,MAAM,4BACNnC,SAAU,SAAAC,GAAC,OACTe,GAAU,SAAAuB,GACR,OAAAd,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYc,GAAS,IAAEzB,WAAYb,EAAEX,OAAO8C,OAC9C,GAAE,EAEJzC,WAAS,EAAA1E,SAERkI,EAAAA,GACCC,OAAOC,KAAKF,EAAAA,GAAaG,KAAI,SAAAC,GAAO,MAAI,EACtCrI,EAAAA,EAAAA,KAACsI,EAAAA,EAAa,CAAClI,GAAI,CAAEmI,WAAY,QAASxI,SAAEsI,IAG5CJ,EAAAA,EAAYI,IAGVJ,EAAAA,EAAYI,GAASD,KAAI,SAAAI,GAAM,MAAI,EACjCxI,EAAAA,EAAAA,KAACyI,EAAAA,EAAQ,CAACvB,MAAOmB,IAAYG,EAASA,EAASH,EAAU,IAAMG,EAAOzI,SAAEyI,IACzE,IACJ,UAGPhJ,EAAAA,EAAAA,MAAC8E,EAAAA,EAAG,CAACI,QAAS,OAAQ5E,eAAgB,WAAY4I,WAAY,SAAS3I,SAAA,EACrEC,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAACtD,QAAQ,UAAUD,MAAM,WAAUH,SAAC,mDAG/CC,EAAAA,EAAAA,KAAC2I,EAAAA,EAAQ,CACPC,SAAU7C,EACVxF,QAAS,kBAAMyF,GAAuB,SAAAD,GAAmB,OAAKA,CAAmB,GAAC,WAKxF/F,EAAAA,EAAAA,KAACsF,EAAAA,EAAgB,CAACxG,aAAcA,EAAcK,cAAc,mBAGlE,EE5NA,SAAS0J,EAASC,GAChB,IAAQ/I,EAA2B+I,EAA3B/I,SAAUmH,EAAiB4B,EAAjB5B,MAAO6B,EAAUD,EAAVC,MAEzB,OACE/I,EAAAA,EAAAA,KAAA,OACEgJ,KAAK,WACLC,OAAQ/B,IAAU6B,EAClBnI,GAAE,mBAAAmC,OAAqBgG,GACvB,gCAAAhG,OAA+BgG,GAAQhJ,SAEtCmH,IAAU6B,IAAS/I,EAAAA,EAAAA,KAACsE,EAAAA,EAAG,CAAClE,GAAI,CAAE8I,EAAG,GAAInJ,SAAEA,KAG9C,CAEA,SAASoJ,EAAUJ,GACjB,MAAO,CACLnI,GAAG,cAADmC,OAAgBgG,GAClB,gBAAgB,mBAADhG,OAAqBgG,GAExC,CAEA,IA4CA,EA5CgC,WAC9B,IAAA7H,GAA0BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BgG,EAAK9F,EAAA,GAAEgI,EAAQhI,EAAA,GAKtB,OACE5B,EAAAA,EAAAA,MAAC6J,EAAAA,EAAS,CACR/I,SAAS,KACTF,GAAI,CACFoE,OAAQ,OACRE,QAAS,OACT5E,eAAgB,SAChB4I,WAAY,UACZ3I,SAAA,EAEFC,EAAAA,EAAAA,KAACsJ,EAAAA,GAAM,CAAAvJ,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iCAETP,EAAAA,EAAAA,MAAC8E,EAAAA,EAAG,CAACjE,MAAM,QAAQmE,OAAO,QAAOzE,SAAA,EAC/BC,EAAAA,EAAAA,KAACsE,EAAAA,EAAG,CAAClE,GAAI,CAAEmJ,aAAc,EAAGC,YAAa,WAAYzJ,UACnDP,EAAAA,EAAAA,MAACiK,EAAAA,EAAI,CACHvC,MAAOA,EACPpC,SArBW,SAACtE,EAA6BkJ,GACjDN,EAASM,EACX,EAoBUvJ,QAAQ,YACR,aAAW,OACXwJ,UAAU,YACVC,eAAe,UAAS7J,SAAA,EAExBC,EAAAA,EAAAA,KAAC6J,EAAAA,GAAGtD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACU,MAAM,0CAAekC,EAAU,IAAE,IAAE/I,GAAI,CAAEiD,QAAS,sBACvDrD,EAAAA,EAAAA,KAAC6J,EAAAA,GAAGtD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACU,MAAM,gDAAgBkC,EAAU,IAAE,IAAE/I,GAAI,CAAEiD,QAAS,2BAG5DrD,EAAAA,EAAAA,KAAC6I,EAAQ,CAAC3B,MAAOA,EAAO6B,MAAO,EAAEhJ,UAC/BC,EAAAA,EAAAA,KAAC8J,EAAsB,OAEzB9J,EAAAA,EAAAA,KAAC6I,EAAQ,CAAC3B,MAAOA,EAAO6B,MAAO,EAAEhJ,UAC/BC,EAAAA,EAAAA,KAAC+J,EAAuB,WAKlC,C,0DCvEA,KAAeC,EAAAA,EAAAA,IAA4BhK,EAAAA,EAAAA,KAAK,OAAQ,CACtDiK,EAAG,uDACD,oB,2DCFJ,KAAeD,EAAAA,EAAAA,IAA4BhK,EAAAA,EAAAA,KAAK,OAAQ,CACtDiK,EAAG,qDACD,qB","sources":["components/CancelSubmitBtns/index.tsx","content/manage/Member/ManyMemberMigrationCard.tsx","content/manage/Member/OneMemberMigrationCard.tsx","commons/StringLength.ts","content/manage/Member/MigrationPage.tsx","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom'\n\nimport { Button, Stack } from '@mui/material'\n\ninterface CancelSubmitBtnsProps {\n  handleSubmit: React.MouseEventHandler<HTMLButtonElement>\n  handleCancel?: React.MouseEventHandler<HTMLButtonElement>\n  displayCancelBtn?: boolean\n  submitBtnText?: string\n  cancelBtnText?: string\n}\n\nconst CancelSubmitBtns: React.FC<CancelSubmitBtnsProps> = ({\n  handleSubmit,\n  handleCancel,\n  displayCancelBtn = true,\n  submitBtnText = '등록',\n  cancelBtnText = '취소'\n}: CancelSubmitBtnsProps) => {\n  const navigate = useNavigate()\n\n  const _handleCancel: React.MouseEventHandler<HTMLButtonElement> = event => {\n    if (handleCancel === undefined) navigate(-1)\n    else handleCancel(event)\n  }\n\n  return (\n    <Stack mt={2} pb={2} direction=\"row\" spacing={2} justifyContent=\"center\">\n      {displayCancelBtn && (\n        <Button color=\"error\" variant=\"outlined\" sx={{ width: '50%', maxWidth: '120px' }} onClick={_handleCancel}>\n          {cancelBtnText}\n        </Button>\n      )}\n\n      <Button color=\"success\" variant=\"contained\" onClick={handleSubmit} sx={{ width: '50%', maxWidth: '120px' }}>\n        {submitBtnText}\n      </Button>\n    </Stack>\n  )\n}\n\nexport default CancelSubmitBtns\n","import { useSnackbar } from 'notistack'\nimport { useRef, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\n\nimport { Box, Button, Card, Divider, Link, Typography } from '@mui/material'\n\nimport CancelSubmitBtns from 'src/components/CancelSubmitBtns'\n\nimport { useMigrationMember } from 'src/hooks/api/member'\nimport { PureLightTheme } from 'src/theme/schemes/PureLightTheme'\n\nconst ManyMemberMigrationCard = () => {\n  const uploadInputRef = useRef<HTMLInputElement>(null)\n  const { id } = useParams()\n  const clubId = Number(id)\n  const navigate = useNavigate()\n  const { enqueueSnackbar } = useSnackbar()\n  const [isAttached, setIsAttached] = useState<boolean>(false)\n  const [ref, setRef] = useState<HTMLInputElement>()\n  const migrationMutation = useMigrationMember()\n\n  const handleSubmit = async () => {\n    // 아무 것도 선택안한 경우 return\n    if (!ref || !ref.files || ref?.files?.length === 0) {\n      enqueueSnackbar('파일을 선택하여 주십시오.', { variant: 'error' })\n      return\n    }\n\n    const file = ref.files[0]\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      await migrationMutation.mutateAsync({ clubId, formData })\n      navigate(`/manage/${clubId}/member`)\n    } catch (error) {}\n  }\n\n  return (\n    <Card sx={{ padding: { xs: 2, sm: 2, md: 4 } }}>\n      <Typography variant=\"h3\" align=\"center\" mb={3} color={PureLightTheme.colors.primary.main}>\n        한번에 회원 추가\n      </Typography>\n      <Typography marginBottom={3} align=\"center\">\n        <Link href={process.env.REACT_APP_MIGRATION_EXAMPLE} target=\"_blank\">\n          여기\n        </Link>\n        를 클릭하시면 양식을 다운로드 받으실 수 있습니다. 양식에 맞추어 작성하신 후, 엑셀 파일을 업로드하세요.\n      </Typography>\n\n      <Divider />\n\n      <Box mt={2} mb={5} marginTop={3}>\n        <Box height={80}>\n          {isAttached ? (\n            <Box>\n              <Button variant=\"outlined\" fullWidth sx={{ height: '100%', display: 'block' }} color=\"success\">\n                첨부 완료\n                <Typography variant=\"subtitle1\">등록 버튼 클릭 시 바로 적용됩니다.</Typography>\n              </Button>\n            </Box>\n          ) : (\n            <Box>\n              <input\n                ref={uploadInputRef}\n                type=\"file\"\n                accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                style={{ display: 'none' }}\n                onChange={e => {\n                  if (uploadInputRef.current) {\n                    setRef(uploadInputRef.current)\n                    setIsAttached(e.target?.files?.length ? e.target?.files?.length > 0 : false)\n                  }\n                }}\n              />\n              <Button\n                onClick={() => uploadInputRef.current && uploadInputRef.current.click()}\n                variant=\"outlined\"\n                fullWidth\n                sx={{ height: '100%', display: 'block' }}\n              >\n                이 곳을 클릭하여 업로드하세요.\n                <Typography variant=\"subtitle1\">(.xlsx 확장자만 가능합니다.)</Typography>\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Box>\n\n      <CancelSubmitBtns handleSubmit={handleSubmit} submitBtnText=\"등록\" />\n    </Card>\n  )\n}\n\nexport default ManyMemberMigrationCard\n","import { useSnackbar } from 'notistack'\nimport { useState } from 'react'\nimport { useParams } from 'react-router'\n\nimport {\n  Box,\n  Card,\n  Checkbox,\n  FormControl,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  Typography\n} from '@mui/material'\n\nimport departments from 'src/data/departments'\nimport { HELPER_TEXT_MESSAGE } from 'src/data/messages'\n\nimport { formatLikePhoneNumber } from 'src/utils/formatLikePhoneNumber '\n\nimport CancelSubmitBtns from 'src/components/CancelSubmitBtns'\n\nimport { stringLength } from 'src/commons/StringLength'\nimport { usePostMember } from 'src/hooks/api/member'\nimport { PureLightTheme } from 'src/theme/schemes/PureLightTheme'\n\nexport interface MemberForm {\n  studentId: string\n  name: string\n  phoneNumber: string | null\n  department: string\n  email: string | null\n}\n\nconst OneMemberMigrationCard = () => {\n  const params = useParams()\n  const clubId = Number(params.id)\n  const { enqueueSnackbar } = useSnackbar()\n  const [member, setMember] = useState<MemberForm>({\n    studentId: '',\n    name: '',\n    phoneNumber: '',\n    email: '',\n    department: ''\n  })\n  const [isRefreshDepartment, setIsRefreshDepartment] = useState(false)\n  const NAME_LIMIT = 50\n\n  const isProperStudentIdFormat = (studentId: string): boolean => {\n    const regExp = /^[0-9]{4}(KU|[0-9]{2})[0-9]{4}$/\n    return regExp.test(studentId)\n  }\n\n  const isProperPhoneNumberFormat = (phoneNumber: string): boolean => {\n    const regExp = /^01(?:0|1|[6-9])-(?:\\d{3}|\\d{4})-\\d{4}$/\n    return regExp.test(phoneNumber)\n  }\n\n  const isProperEmailFormat = (email: string) => {\n    const regExp = /^[\\w+-\\.]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/\n    return regExp.test(email)\n  }\n\n  const isProperNameLength = (name: string) => {\n    return stringLength(name) < NAME_LIMIT\n  }\n\n  const isProperNameFormat = (name: string) => {\n    const trimmedName = name.trim()\n    const regExp = /^[a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣 ]+$/\n    return regExp.test(name) && trimmedName === name\n  }\n\n  const postMemberMutation = usePostMember(clubId, {\n    ...member,\n    phoneNumber: member.phoneNumber || null,\n    email: member.email || null\n  })\n\n  const handleSubmit = async () => {\n    if (!member.studentId || !member.name) {\n      enqueueSnackbar('모든 항목에 대해 작성해 주십시오.', { variant: 'error' })\n      return\n    }\n\n    if (!isProperStudentIdFormat(member.studentId)) {\n      enqueueSnackbar('유효하지 않은 학번 입니다.', { variant: 'error' })\n      return\n    }\n\n    if (member.phoneNumber && !isProperPhoneNumberFormat(member.phoneNumber)) {\n      enqueueSnackbar('유효하지 않은 전화번호 입니다. 010-xxxx-xxxx 형식으로 작성해주세요.', { variant: 'error' })\n      return\n    }\n    if (member.email && member.email !== '' && !isProperEmailFormat(member.email)) {\n      enqueueSnackbar('유효하지 않은 이메일 형식입니다.', { variant: 'error' })\n      return\n    }\n\n    if (!isProperNameLength(member.name)) {\n      enqueueSnackbar('이름은 영문 기준 50자 이내로 작성해 주십시오.', { variant: 'error' })\n      return\n    }\n\n    if (!isProperNameFormat(member.name)) {\n      enqueueSnackbar('유효하지 않은 이름입니다. 특수문자 및 이름 앞뒤 공백문자는 사용할 수 없습니다.', {\n        variant: 'error'\n      })\n      return\n    }\n\n    if (!member.department) {\n      enqueueSnackbar('학과를 선택해 주십시오.', { variant: 'error' })\n      return\n    }\n\n    try {\n      await postMemberMutation.mutateAsync()\n      setMember({\n        studentId: '',\n        name: '',\n        phoneNumber: '',\n        email: '',\n        department: isRefreshDepartment ? '' : member.department\n      })\n    } catch (error) {}\n  }\n  const handlePhoneNumberChange: React.ChangeEventHandler<HTMLTextAreaElement> = ({ target: { value } }) => {\n    setMember(prevState => ({ ...prevState, phoneNumber: formatLikePhoneNumber(value) }))\n  }\n\n  return (\n    <Card sx={{ padding: { xs: 2, sm: 2, md: 4 } }}>\n      <Typography variant=\"h3\" align=\"center\" mb={3} color={PureLightTheme.colors.primary.main}>\n        개별 회원 추가\n      </Typography>\n      <Stack direction=\"column\" sx={{ margin: 1, marginBottom: 5 }}>\n        <TextField\n          required\n          id=\"studentId\"\n          label=\"학번\"\n          variant=\"standard\"\n          value={member.studentId}\n          inputProps={{ maxLength: 15 }}\n          onChange={e =>\n            setMember(prevState => {\n              return { ...prevState, studentId: e.target.value }\n            })\n          }\n          sx={{ margin: 0.3 }}\n        />\n        <TextField\n          required\n          id=\"name\"\n          label=\"이름\"\n          variant=\"standard\"\n          value={member.name}\n          inputProps={{ maxLength: 50 }}\n          onChange={e =>\n            setMember(prevState => {\n              return { ...prevState, name: e.target.value }\n            })\n          }\n          sx={{ margin: 0.3 }}\n        />\n        <TextField\n          id=\"phoneNumber\"\n          label=\"전화번호\"\n          helperText={HELPER_TEXT_MESSAGE.PHONE_NUMBER}\n          variant=\"standard\"\n          value={member.phoneNumber}\n          onChange={handlePhoneNumberChange}\n          sx={{ margin: 0.3 }}\n          inputProps={{ pattern: '010-[0-9]{4}-[0-9]{4}', maxLength: 13 }}\n        />\n\n        <TextField\n          id=\"email\"\n          label=\"이메일 (kim@korea.ac.kr)\"\n          variant=\"standard\"\n          value={member.email}\n          onChange={e =>\n            setMember(prevState => {\n              return { ...prevState, email: e.target.value }\n            })\n          }\n          sx={{ margin: 0.3 }}\n        />\n\n        <FormControl sx={{ mt: 2, width: '100%' }} size=\"small\" required>\n          <InputLabel htmlFor=\"department\">학과/학부</InputLabel>\n          <Select\n            id=\"department\"\n            value={member.department}\n            name=\"department\"\n            label=\"학과/학부\"\n            onChange={e =>\n              setMember(prevState => {\n                return { ...prevState, department: e.target.value as string }\n              })\n            }\n            fullWidth\n          >\n            {departments &&\n              Object.keys(departments).map(college => [\n                <ListSubheader sx={{ fontWeight: 'bold' }}>{college}</ListSubheader>,\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                departments[college] &&\n                  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                  // @ts-ignore\n                  departments[college].map(depart => [\n                    <MenuItem value={college === depart ? depart : college + ' ' + depart}>{depart}</MenuItem>\n                  ])\n              ])}\n          </Select>\n        </FormControl>\n        <Box display={'flex'} justifyContent={'flex-end'} alignItems={'center'}>\n          <Typography variant=\"caption\" color=\"GrayText\">\n            제출 후 학부 고정\n          </Typography>\n          <Checkbox\n            checked={!isRefreshDepartment}\n            onClick={() => setIsRefreshDepartment(isRefreshDepartment => !isRefreshDepartment)}\n          />\n        </Box>\n      </Stack>\n\n      <CancelSubmitBtns handleSubmit={handleSubmit} submitBtnText=\"등록\" />\n    </Card>\n  )\n}\n\nexport default OneMemberMigrationCard\n","export const stringLength = (str: string) => {\n  let byte = 0\n\n  for (let i = 0; i < str.length; i++) {\n    const code = str.charCodeAt(i)\n\n    if (code > 127) {\n      byte += 3\n    } else if (code > 64 && code < 91) {\n      byte += 3\n    } else {\n      byte += 1\n    }\n  }\n\n  return byte\n}\n","import { useState } from 'react'\nimport { Helmet } from 'react-helmet-async'\n\nimport { Box, Container, Tab, Tabs } from '@mui/material'\n\nimport ManyMemberMigrationCard from './ManyMemberMigrationCard'\nimport OneMemberMigrationCard from './OneMemberMigrationCard'\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n    >\n      {value === index && <Box sx={{ p: 1 }}>{children}</Box>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  }\n}\n\nconst MigrationPage: React.FC = () => {\n  const [value, setValue] = useState(0)\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue)\n  }\n\n  return (\n    <Container\n      maxWidth=\"lg\"\n      sx={{\n        height: '80vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}\n    >\n      <Helmet>\n        <title>회원 추가</title>\n      </Helmet>\n      <Box width=\"400px\" height=\"500px\">\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            variant=\"fullWidth\"\n            aria-label=\"tabs\"\n            textColor=\"secondary\"\n            indicatorColor=\"primary\"\n          >\n            <Tab label=\"개별 회원 추가\" {...a11yProps(0)} sx={{ padding: '10px!important' }} />\n            <Tab label=\"한번에 회원 추가\" {...a11yProps(1)} sx={{ padding: '10px!important' }} />\n          </Tabs>\n        </Box>\n        <TabPanel value={value} index={0}>\n          <OneMemberMigrationCard />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <ManyMemberMigrationCard />\n        </TabPanel>\n      </Box>\n    </Container>\n  )\n}\n\nexport default MigrationPage\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');"],"names":["_ref","handleSubmit","handleCancel","_ref$displayCancelBtn","displayCancelBtn","_ref$submitBtnText","submitBtnText","_ref$cancelBtnText","cancelBtnText","navigate","useNavigate","_jsxs","Stack","mt","pb","direction","spacing","justifyContent","children","_jsx","Button","color","variant","sx","width","maxWidth","onClick","event","undefined","uploadInputRef","useRef","id","useParams","clubId","Number","enqueueSnackbar","useSnackbar","_useState","useState","_useState2","_slicedToArray","isAttached","setIsAttached","_useState3","_useState4","ref","setRef","migrationMutation","useMigrationMember","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref$files","file","formData","wrap","_context","prev","next","files","length","abrupt","FormData","append","mutateAsync","concat","t0","stop","apply","arguments","Card","padding","xs","sm","md","Typography","align","mb","PureLightTheme","colors","primary","main","marginBottom","Link","href","process","target","Divider","Box","marginTop","height","fullWidth","display","type","accept","style","onChange","e","_e$target","_e$target$files","_e$target2","_e$target2$files","current","click","CancelSubmitBtns","params","studentId","name","phoneNumber","email","department","member","setMember","isRefreshDepartment","setIsRefreshDepartment","isProperNameFormat","trimmedName","trim","test","postMemberMutation","usePostMember","_objectSpread","str","byte","i","code","charCodeAt","stringLength","margin","TextField","required","label","value","inputProps","maxLength","prevState","helperText","HELPER_TEXT_MESSAGE","PHONE_NUMBER","_ref2","formatLikePhoneNumber","pattern","FormControl","size","InputLabel","htmlFor","Select","departments","Object","keys","map","college","ListSubheader","fontWeight","depart","MenuItem","alignItems","Checkbox","checked","TabPanel","props","index","role","hidden","p","a11yProps","setValue","Container","Helmet","borderBottom","borderColor","Tabs","newValue","textColor","indicatorColor","Tab","OneMemberMigrationCard","ManyMemberMigrationCard","createSvgIcon","d"],"sourceRoot":""}