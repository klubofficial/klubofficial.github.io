{"version":3,"file":"static/js/367.e219a7ea.chunk.js","mappings":"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","sources":["components/ConfirmDialog/index.tsx","content/authentication/Register/index.tsx"],"sourcesContent":["import { Box, Button, Dialog, Typography } from '@mui/material'\n\ninterface ConfirmDialogProps {\n  open: boolean\n  handleClose: React.MouseEventHandler<HTMLButtonElement>\n  handleSubmit: React.MouseEventHandler<HTMLButtonElement>\n  confirmMessage?: string\n}\n\nconst ConfirmDialog: React.FC<ConfirmDialogProps> = ({\n  open,\n  handleClose,\n  handleSubmit,\n  confirmMessage = '정말 실행하시겠습니까?'\n}) => {\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <Box textAlign=\"center\" p={3}>\n        <Typography variant=\"h4\" color=\"primary\">\n          {confirmMessage}\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-evenly\" mt={2}>\n          <Button variant=\"outlined\" onClick={handleClose}>\n            취소\n          </Button>\n          <Button variant=\"contained\" color=\"error\" onClick={handleSubmit}>\n            확인\n          </Button>\n        </Box>\n      </Box>\n    </Dialog>\n  )\n}\n\nexport default ConfirmDialog\n","import axios, { AxiosResponse } from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useState } from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport { useNavigate } from 'react-router'\n\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Link,\n  TextField as MuiTextField,\n  Paper,\n  TextFieldProps,\n  Typography,\n  useMediaQuery\n} from '@mui/material'\nimport { styled, useTheme } from '@mui/material/styles'\n\nimport { PrivacyPolicy } from 'src/assets/PrivacyPolicy'\nimport ConfirmDialog from 'src/components/ConfirmDialog'\n\nconst PageWrapper = styled(Box)(\n  () => `\n      display: flex;\n      justify-content: center;\n      align-items: center;\n  `\n)\n\nconst TextField = (props: TextFieldProps) => <MuiTextField size=\"small\" required fullWidth {...props} />\n\ninterface RegisterAPIResponse extends AxiosResponse {\n  id: number\n  studentId: string\n  email: string\n  nickname: string\n}\n\nfunction Register() {\n  const navigate = useNavigate()\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n  const { enqueueSnackbar } = useSnackbar()\n  const [checked, setChecked] = useState<boolean>(false)\n\n  const [values, setValues] = useState({\n    email: null,\n    password: null,\n    nickname: null,\n    studentId: null\n  })\n\n  const [confirmMode, setConfirmMode] = useState<boolean>(false)\n  const confirmMessage = `입력하신 학번은 ${values.studentId}입니다. 가입 이후엔 수정하실 수 없습니다.`\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = event => {\n    if (event.target.type === 'password') {\n      const password = document.getElementById('password') as HTMLInputElement\n      const confirmPassword = document.getElementById('confirm-password') as HTMLInputElement\n      if (password.value !== confirmPassword.value) confirmPassword.setCustomValidity(\"Passwords don't match\")\n      else confirmPassword.setCustomValidity('')\n    }\n    if (event.target.id !== 'confirm-password') {\n      const newValues = {\n        ...values,\n        [event.target.name]: event.target.value\n      }\n      setValues(newValues)\n    }\n  }\n\n  const dialogOpen: React.FormEventHandler<HTMLFormElement> = e => {\n    e.preventDefault()\n\n    if (!checked) {\n      enqueueSnackbar('개인정보 처리방침에 동의하셔야 서비스를 이용하실 수 있습니다.', {\n        variant: 'error'\n      })\n      return\n    }\n\n    setConfirmMode(true)\n  }\n\n  const handleSubmit: React.MouseEventHandler<HTMLButtonElement> = e => {\n    e.preventDefault()\n\n    axios\n      .post<RegisterAPIResponse>(`${process.env.REACT_APP_APIHOST}/auth/register`, values)\n      .then(() => {\n        enqueueSnackbar('KLUB의 일원이 되신 것을 환영해요! 이메일 확인 후 로그인해주세요 :)', { variant: 'success' })\n        navigate('/auth/login')\n      })\n      .catch(err =>\n        enqueueSnackbar(err.response.data?.message ?? '서버에서 오류가 발생한 것 같아요. 다시 시도해주세요', {\n          variant: 'error'\n        })\n      )\n  }\n\n  return (\n    <PageWrapper>\n      <Helmet>\n        <title>회원가입</title>\n      </Helmet>\n      <Paper\n        square={matches ? false : true}\n        sx={{\n          my: theme.spacing(8),\n          padding: 3,\n          flex: 1,\n          maxWidth: '480px',\n          [theme.breakpoints.down('sm')]: {\n            my: 0,\n            py: 5,\n            maxWidth: '100%'\n          }\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h3\" sx={{ mb: 2, textAlign: 'center' }}>\n          KLUB에 회원가입\n        </Typography>\n        <Box\n          component=\"form\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            '& .MuiTextField-root': { margin: 1 }\n          }}\n          onSubmit={dialogOpen}\n        >\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            label=\"이메일\"\n            helperText=\"학교 이메일을 입력하세요.\"\n            onChange={handleChange}\n          />\n          <TextField id=\"password\" name=\"password\" type=\"password\" label=\"비밀번호\" onChange={handleChange} />\n          <TextField id=\"confirm-password\" type=\"password\" label=\"비밀번호 확인\" onChange={handleChange} />\n          <TextField id=\"nickname\" name=\"nickname\" type=\"text\" label=\"닉네임\" onChange={handleChange} />\n          <TextField\n            id=\"student-id\"\n            name=\"studentId\"\n            type=\"text\"\n            label=\"학번\"\n            helperText=\"학교에서 부여받은 학번을 입력하세요.\"\n            inputProps={{ pattern: '[0-9]{4}(KU|[0-9]{2})[0-9]{4}' }}\n            onChange={handleChange}\n          />\n          <Typography mt={1} fontWeight=\"bold\">\n            개인정보 처리방침\n          </Typography>\n          <Box sx={{ height: '20vh', overflowY: 'scroll', marginY: 2, backgroundColor: '#eeeeee', p: 1 }}>\n            <PrivacyPolicy />\n          </Box>\n          <Typography>\n            위 항목에 동의하십니까?\n            <Checkbox defaultChecked={false} onChange={e => setChecked(e.target.checked)} />\n          </Typography>\n\n          <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 1 }}>\n            회원가입\n          </Button>\n          <Link href=\"/auth/login\" sx={{ mt: 1 }}>\n            이미 계정이 있으신가요?\n          </Link>\n        </Box>\n        <ConfirmDialog\n          open={confirmMode}\n          handleClose={() => setConfirmMode(false)}\n          handleSubmit={handleSubmit}\n          confirmMessage={confirmMessage}\n        />\n      </Paper>\n    </PageWrapper>\n  )\n}\n\nexport default Register\n"],"names":["_ref","open","handleClose","handleSubmit","_ref$confirmMessage","confirmMessage","_jsx","Dialog","onClose","children","_jsxs","Box","textAlign","p","Typography","variant","color","display","justifyContent","mt","Button","onClick","PageWrapper","styled","TextField","props","MuiTextField","_objectSpread","size","required","fullWidth","navigate","useNavigate","theme","useTheme","matches","useMediaQuery","breakpoints","up","enqueueSnackbar","useSnackbar","_useState","useState","_useState2","_slicedToArray","checked","setChecked","_useState3","email","password","nickname","studentId","_useState4","values","setValues","_useState5","_useState6","confirmMode","setConfirmMode","concat","handleChange","event","target","type","document","getElementById","confirmPassword","value","setCustomValidity","id","newValues","_defineProperty","name","Helmet","Paper","square","sx","my","spacing","padding","flex","maxWidth","down","py","component","mb","flexDirection","alignItems","margin","onSubmit","e","preventDefault","label","helperText","onChange","inputProps","pattern","fontWeight","height","overflowY","marginY","backgroundColor","PrivacyPolicy","Checkbox","defaultChecked","Link","href","ConfirmDialog","axios","process","then","catch","err","_err$response$data$me","_err$response$data","response","data","message"],"sourceRoot":""}