{"version":3,"file":"static/js/76.202cf5e7.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/manage/Conference/BulkActions.tsx","content/manage/Conference/ConferencesTable.tsx","content/manage/Conference/ConferenceList.tsx","content/manage/Attendance/index.tsx","content/manage/TabMenu.tsx","content/manage/PageHeader.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Container, styled } from '@mui/material'\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(3)};\n`\n)\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  )\n}\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default PageTitleWrapper\n","import { Box, Button } from '@mui/material'\nimport { styled } from '@mui/material/styles'\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone'\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n)\n\ninterface BulkActionsProps {\n  selectedConferences: number[]\n  handleDelete(ids: number[]): void\n}\n\nfunction BulkActions({ selectedConferences, handleDelete }: BulkActionsProps) {\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <ButtonError\n            sx={{ ml: 1 }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n            onClick={() => handleDelete(selectedConferences)}\n          >\n            삭제\n          </ButtonError>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default BulkActions\n","import { FC, ChangeEvent, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Tooltip,\n  Divider,\n  Box,\n  Card,\n  Checkbox,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableContainer,\n  Typography,\n  useTheme,\n  CardHeader,\n  useMediaQuery\n} from '@mui/material'\n\nimport { Conference } from 'src/models/Conference'\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone'\nimport BulkActions from './BulkActions'\nimport { Link, useParams } from 'react-router-dom'\n\ninterface ConferencesTableProps {\n  className?: string\n  conferences: Conference[]\n  handleDelete(ids: number[]): void\n}\n\nconst applyPagination = (conferences: Conference[], page: number, limit: number): Conference[] => {\n  return conferences.slice(page * limit, page * limit + limit)\n}\n\nconst ConferencesTable: FC<ConferencesTableProps> = ({ conferences, handleDelete }) => {\n  const [selectedConferences, setSelectedConferences] = useState<number[]>([])\n  const selectedBulkActions = selectedConferences.length > 0\n  const [page, setPage] = useState<number>(0)\n  const [limit, setLimit] = useState<number>(5)\n  const params = useParams()\n  const clubId = params.id\n\n  const handleSelectAllConferences = (event: ChangeEvent<HTMLInputElement>): void => {\n    setSelectedConferences(event.target.checked ? conferences && conferences.map(conference => conference.id) : [])\n  }\n\n  const handleSelectOneConference = (event: ChangeEvent<HTMLInputElement>, conferenceId: number): void => {\n    if (!selectedConferences.includes(conferenceId)) {\n      setSelectedConferences(prevSelected => [...prevSelected, conferenceId])\n    } else {\n      setSelectedConferences(prevSelected => prevSelected.filter(id => id !== conferenceId))\n    }\n  }\n\n  const handlePageChange = (event: any, newPage: number): void => {\n    setPage(newPage)\n  }\n\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    setLimit(parseInt(event.target.value))\n  }\n\n  const paginatedConferences = applyPagination(conferences, page, limit)\n  const selectedSomeConferences = selectedConferences.length > 0 && selectedConferences.length < conferences.length\n  const selectedAllConferences = selectedConferences.length === conferences.length\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n\n  useEffect(() => setLimit(matches ? 10 : 5), [matches])\n\n  return (\n    <Card>\n      <Box height=\"55px\">\n        {selectedBulkActions ? (\n          <Box flex={1} p={1}>\n            <BulkActions selectedConferences={selectedConferences} handleDelete={handleDelete} />\n          </Box>\n        ) : (\n          <CardHeader title=\"행사 목록\" />\n        )}\n      </Box>\n\n      <Divider />\n      <TableContainer>\n        <Table>\n          {matches && (\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    color=\"primary\"\n                    checked={selectedAllConferences}\n                    indeterminate={selectedSomeConferences}\n                    onChange={handleSelectAllConferences}\n                  />\n                </TableCell>\n                <TableCell>행사명</TableCell>\n                <TableCell>날짜</TableCell>\n                <TableCell>참석 인원</TableCell>\n                <TableCell align=\"right\" />\n              </TableRow>\n            </TableHead>\n          )}\n          <TableBody>\n            {paginatedConferences.map(conference => {\n              const isConferenceSelected = selectedConferences.includes(conference.id)\n              const conferenceDate = (\n                <Typography\n                  variant={matches ? 'body1' : 'caption'}\n                  fontWeight={matches ? 'bold' : 'normal'}\n                  color={matches ? 'text.primary' : 'normal'}\n                  gutterBottom\n                  noWrap\n                >\n                  {new Date(conference.startAt).toLocaleDateString()}\n                </Typography>\n              )\n              return (\n                <TableRow hover key={conference.id} selected={isConferenceSelected}>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"primary\"\n                      checked={isConferenceSelected}\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                        handleSelectOneConference(event, conference.id)\n                      }\n                      value={isConferenceSelected}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Link\n                      to={`/manage/${clubId}/attendance/${conference.id}`}\n                      state={conference}\n                      style={{ textDecorationColor: 'black' }}\n                    >\n                      <Typography variant=\"body2\" fontWeight=\"bold\" color=\"text.primary\" gutterBottom noWrap>\n                        <Box style={{ display: 'flex', alignItems: 'baseline' }}>{conference.title}</Box>\n                      </Typography>\n                    </Link>\n                    {!matches && conferenceDate}\n                  </TableCell>\n                  {matches && <TableCell>{conferenceDate}</TableCell>}\n                  <TableCell align={matches ? 'left' : 'right'}>\n                    <Typography variant=\"body1\" fontWeight=\"bold\" color=\"text.primary\" gutterBottom noWrap>\n                      {conference.member.length === 0\n                        ? '-'\n                        : `${conference.member[0].name} 외 ${conference.member.length - 1}명`}\n                    </Typography>\n                  </TableCell>\n                  {matches && (\n                    <TableCell align=\"right\">\n                      <Tooltip title=\"삭제\" arrow onClick={() => handleDelete([conference.id])}>\n                        <IconButton\n                          sx={{\n                            '&:hover': { background: theme.colors.error.lighter },\n                            color: theme.palette.error.main\n                          }}\n                          color=\"inherit\"\n                          size=\"small\"\n                        >\n                          <DeleteTwoToneIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                  )}\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box p={2}>\n        <TablePagination\n          component=\"div\"\n          count={conferences.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25, 30]}\n          sx={\n            !matches\n              ? {\n                  '.MuiToolbar-gutters': {\n                    width: '100%',\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    justifyContent: 'center'\n                  }\n                }\n              : null\n          }\n        />\n      </Box>\n    </Card>\n  )\n}\n\nConferencesTable.propTypes = {\n  conferences: PropTypes.array.isRequired\n}\n\nConferencesTable.defaultProps = {\n  conferences: []\n}\n\nexport default ConferencesTable\n","import { Card } from '@mui/material'\nimport axios, { AxiosResponse } from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useEffect, useState } from 'react'\nimport { useAuthHeader } from 'react-auth-kit'\nimport { useParams } from 'react-router-dom'\nimport { Conference } from 'src/models/Conference'\nimport ConferencesTable from './ConferencesTable'\n\nfunction ConferenceList() {\n  const params = useParams()\n  const [conferenceList, setConferenceList] = useState<Conference[]>([])\n  const { enqueueSnackbar } = useSnackbar()\n  const authHeader = useAuthHeader()\n\n  const handleDelete = async (ids: number[]): Promise<void> => {\n    ids.forEach(async id => {\n      axios\n        .delete(`${process.env.REACT_APP_APIHOST}/club/conference?conferenceId=${id}`, {\n          headers: { Authorization: authHeader() }\n        })\n        .then(res => {\n          if (res.data.message !== 'ok') {\n            throw new Error()\n          }\n\n          enqueueSnackbar('정상적으로 삭제되었습니다.', { variant: 'success' })\n          setConferenceList(conferenceList.filter(c => c.id !== id))\n        })\n        .catch(error => {\n          enqueueSnackbar(`${error.response?.data?.message}`, { variant: 'error' })\n        })\n    })\n  }\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_APIHOST}/club/conference?clubId=${params.id}`, {\n        headers: { Authorization: authHeader() }\n      })\n      .then((res: AxiosResponse<Conference[]>) => {\n        setConferenceList(res.data)\n      })\n  }, [])\n\n  return (\n    <Card>\n      <ConferencesTable conferences={conferenceList} handleDelete={handleDelete} />\n    </Card>\n  )\n}\n\nexport default ConferenceList\n","import { Container, Grid } from '@mui/material'\nimport { Helmet } from 'react-helmet-async'\n\nimport PageTitleWrapper from 'src/components/PageTitleWrapper'\nimport PageHeader from '../PageHeader'\nimport ConferenceList from '../Conference/ConferenceList'\nimport { useParams } from 'react-router'\nimport { useAuthUser } from 'react-auth-kit'\n\nfunction Attendance() {\n  const authUser = useAuthUser()\n  const params = useParams()\n  const clubId = params.id\n  const club = authUser()?.clubs.filter(c => c.id === parseInt(clubId))[0]\n\n  return (\n    <>\n      <Helmet>\n        <title>출석 관리</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader clubName={club.name} buttonText=\"행사 추가\" link={`/manage/${clubId}/attendance/register`} />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={3}>\n          <Grid item xs={12}>\n            <ConferenceList />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  )\n}\n\nexport default Attendance\n","import { Box, Grid, Typography } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { Link, useParams } from 'react-router-dom'\nimport { PureLightTheme } from 'src/theme/schemes/PureLightTheme'\n\nconst TabItem = styled(Grid)(`\n    padding: 10px;\n    text-align: center;\n`)\n\nfunction TabMenu() {\n  const params = useParams()\n  const clubId = params.id\n\n  const menus = [\n    { name: '회원 명단', link: `/manage/${clubId}/member` },\n    { name: '출석 관리', link: `/manage/${clubId}/attendance` },\n    { name: '소개 관리', link: `/manage/${clubId}/intro` },\n    { name: '신청폼 관리', link: `/manage/${clubId}/form` }\n  ]\n\n  return (\n    <Box mt={3}>\n      <Grid container justifyContent=\"space-evenly\">\n        {menus.map((menu, index) => {\n          return (\n            <TabItem\n              item\n              key={index}\n              xs={6}\n              sm={3}\n              md={2}\n              sx={\n                window.location.pathname.startsWith(menu.link)\n                  ? { backgroundColor: PureLightTheme.colors.secondary.main, borderRadius: '10px' }\n                  : {}\n              }\n            >\n              <Link to={menu.link} style={{ textDecoration: 'none', color: 'black' }}>\n                <Typography variant=\"h4\" sx={window.location.pathname.startsWith(menu.link) ? { color: 'white' } : {}}>\n                  {menu.name}\n                </Typography>\n              </Link>\n            </TabItem>\n          )\n        })}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default TabMenu\n","import { Box, Button, Grid, Typography } from '@mui/material'\n\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone'\nimport { Link } from 'react-router-dom'\nimport TabMenu from './TabMenu'\n\ninterface PageHeaderProps {\n  clubName: string\n  buttonText?: string\n  secondButtonText?: string\n  link?: string\n  secondLink?: string\n}\n\nfunction PageHeader({ clubName, buttonText, secondButtonText, link, secondLink }: PageHeaderProps) {\n  return (\n    <Box paddingLeft={0} pr={0}>\n      <Grid container alignItems=\"center\">\n        <Grid item xs={12} sm={4} md={4}>\n          <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n            {clubName}\n          </Typography>\n          <Typography variant=\"subtitle2\">{clubName}의 회원 명단, 모집•홍보, 활동 내역을 관리할 수 있습니다</Typography>\n        </Grid>\n        <Grid item xs={0} sm={0} md={4} />\n        {secondButtonText ? (\n          <Grid item xs={12} sm={4} md={2} textAlign=\"right\">\n            <Link to={secondLink} style={{ textDecoration: 'none' }}>\n              <Button\n                sx={{ mt: { xs: 2, md: 0 }, width: { xs: '100%', sm: 'inherit' } }}\n                variant=\"contained\"\n                color=\"success\"\n              >\n                {secondButtonText}\n              </Button>\n            </Link>\n          </Grid>\n        ) : (\n          <Grid item xs={0} sm={4} md={2} />\n        )}\n        {buttonText && (\n          <Grid item xs={12} sm={4} md={2} textAlign=\"center\">\n            <Link to={link} style={{ textDecoration: 'none' }}>\n              <Button\n                sx={{ mt: { xs: 2, md: 0 }, width: { xs: '100%', sm: 'inherit' } }}\n                variant=\"contained\"\n                startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n              >\n                {buttonText}\n              </Button>\n            </Link>\n          </Grid>\n        )}\n      </Grid>\n      <TabMenu />\n    </Box>\n  )\n}\n\nexport default PageHeader\n"],"names":["PageTitle","styled","Box","theme","spacing","children","className","maxWidth","ButtonError","Button","colors","error","main","palette","contrastText","dark","selectedConferences","handleDelete","display","alignItems","justifyContent","sx","ml","startIcon","DeleteTwoTone","variant","onClick","ConferencesTable","conferences","useState","setSelectedConferences","selectedBulkActions","length","page","setPage","limit","setLimit","clubId","useParams","id","paginatedConferences","slice","applyPagination","selectedSomeConferences","selectedAllConferences","useTheme","matches","useMediaQuery","breakpoints","up","useEffect","Card","height","flex","p","CardHeader","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","padding","Checkbox","color","checked","indeterminate","onChange","event","target","map","conference","align","TableBody","isConferenceSelected","includes","conferenceDate","Typography","fontWeight","gutterBottom","noWrap","Date","startAt","toLocaleDateString","hover","selected","conferenceId","prevSelected","filter","value","to","state","style","textDecorationColor","member","name","Tooltip","arrow","IconButton","background","lighter","size","fontSize","TablePagination","component","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","width","flexWrap","defaultProps","params","conferenceList","setConferenceList","enqueueSnackbar","useSnackbar","authHeader","useAuthHeader","ids","forEach","axios","process","headers","Authorization","then","res","data","message","Error","c","catch","response","authUser","useAuthUser","club","clubs","PageTitleWrapper","PageHeader","clubName","buttonText","link","Container","Grid","container","direction","item","xs","TabItem","menus","mt","menu","index","sm","md","window","location","pathname","startsWith","backgroundColor","PureLightTheme","borderRadius","textDecoration","secondButtonText","secondLink","paddingLeft","pr","textAlign","AddTwoTone"],"sourceRoot":""}