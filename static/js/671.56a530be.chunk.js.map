{"version":3,"file":"static/js/671.56a530be.chunk.js","mappings":"qSAkBMA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAClB,6GAOIE,EAAY,SAACC,GAAqB,OAAKC,EAAAA,EAAAA,KAACC,EAAAA,GAAYC,EAAAA,EAAAA,GAAA,CAACC,KAAK,QAAQC,UAAQ,EAACC,WAAS,GAAKN,GAAS,EA6ExG,UA3E+B,WAAO,IAADO,EAC7BC,GAAQC,EAAAA,EAAAA,KACRC,GAAUC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,GAAG,OAC3CC,GAAoBC,EAAAA,EAAAA,MAApBD,gBAERE,GAA4BC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,KAAKC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA5CK,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAoBxB,OACEI,EAAAA,EAAAA,MAAC3B,EAAW,CAAA4B,SAAA,EACVvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAM,CAAAD,UACLvB,EAAAA,EAAAA,KAAA,SAAAuB,SAAO,6CAETD,EAAAA,EAAAA,MAACG,EAAAA,EAAK,CACJC,QAAQjB,EACRkB,IAAErB,EAAC,CACDsB,GAAIrB,EAAMsB,QAAQ,IAClBC,QAAS,EACTC,KAAM,EACNC,SAAU,UAAOC,EAAAA,EAAAA,GAAA3B,EAChBC,EAAMI,YAAYuB,KAAK,MAAQ,CAC9BN,GAAI,EACJO,GAAI,EACJH,SAAU,UACXC,EAAAA,EAAAA,GAAA3B,EAAC,SACM,CAAE8B,GAAI,OAAQC,GAAI,YAAW/B,GACrCiB,SAAA,EAEFvB,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CAACC,UAAU,KAAKC,QAAQ,KAAKb,GAAI,CAAEc,GAAI,EAAGC,UAAW,UAAWnB,SAAC,2CAG5ED,EAAAA,EAAAA,MAACzB,EAAAA,EAAG,CACF0C,UAAU,OACVZ,GAAI,CACFgB,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ,uBAAwB,CAAEC,OAAQ,IAEpCC,SA7CsD,SAAAC,GAC5DA,EAAEC,iBACFC,EAAAA,EAAAA,KACQ,GAADC,OAAIC,0BAA6B,kBAAkBhC,GACvDiC,MAAK,WACJxC,EAAgB,oJAAkC,CAAE2B,QAAS,WAC/D,IACCc,OAAM,SAAAC,GAAG,IAAAC,EAAAC,EAAA,OACR5C,EAA0C,QAA3B2C,EAAkB,QAAlBC,EAACF,EAAIG,SAASC,YAAI,IAAAF,OAAA,EAAjBA,EAAmBG,eAAO,IAAAJ,EAAAA,EAAI,8IAAiC,CAC7EhB,QAAS,SACT,GAER,EAiC+BjB,SAAA,EAEvBvB,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CAACE,QAAQ,UAAUb,GAAI,CAAEc,GAAI,EAAGC,UAAW,UAAWnB,SAAC,+OAGlEvB,EAAAA,EAAAA,KAACF,EAAS,CAAC+D,GAAG,QAAQC,KAAK,QAAQC,KAAK,QAAQC,MAAM,oCAAWC,SAtDR,SAAAC,GAC/D,IAAMC,EAAY,CAAElD,MAAOiD,EAAME,OAAOC,OACxChD,EAAU8C,EACZ,KAqDQnE,EAAAA,EAAAA,KAACsE,EAAAA,EAAM,CAACP,KAAK,SAASvB,QAAQ,YAAYnC,WAAS,EAACsB,GAAI,CAAE4C,GAAI,GAAIhD,SAAC,iDAGnEvB,EAAAA,EAAAA,KAACwE,EAAAA,EAAI,CAACC,KAAK,cAAc9C,GAAI,CAAE4C,GAAI,GAAIhD,SAAC,qCAOlD,C","sources":["content/authentication/FindPassword/index.tsx"],"sourcesContent":["import axios from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useState } from 'react'\nimport { Helmet } from 'react-helmet-async'\n\nimport {\n  Box,\n  Button,\n  Link,\n  TextField as MuiTextField,\n  Paper,\n  TextFieldProps,\n  Typography,\n  styled,\n  useMediaQuery,\n  useTheme\n} from '@mui/material'\n\nconst PageWrapper = styled(Box)(\n  () => `\n      display: flex;\n      justify-content: center;\n      align-items: center;\n  `\n)\n\nconst TextField = (props: TextFieldProps) => <MuiTextField size=\"small\" required fullWidth {...props} />\n\nconst FindPassword: React.FC = () => {\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n  const { enqueueSnackbar } = useSnackbar()\n\n  const [values, setValues] = useState({ email: '' })\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = event => {\n    const newValues = { email: event.target.value }\n    setValues(newValues)\n  }\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = e => {\n    e.preventDefault()\n    axios\n      .post(`${process.env.REACT_APP_APIHOST}/user/password`, values)\n      .then(() => {\n        enqueueSnackbar(`재설정 메일이 전송되었습니다. 메일함을 확인해 주세요!`, { variant: 'success' })\n      })\n      .catch(err =>\n        enqueueSnackbar(err.response.data?.message ?? '서버에서 오류가 발생한 것 같아요. 다시 시도해주세요', {\n          variant: 'error'\n        })\n      )\n  }\n\n  return (\n    <PageWrapper>\n      <Helmet>\n        <title>비밀번호 찾기</title>\n      </Helmet>\n      <Paper\n        square={matches ? false : true}\n        sx={{\n          my: theme.spacing(13),\n          padding: 3,\n          flex: 1,\n          maxWidth: '360px',\n          [theme.breakpoints.down('sm')]: {\n            my: 0,\n            py: 5,\n            maxWidth: '100%'\n          },\n          height: { xs: '90vh', sm: 'inherit' }\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h3\" sx={{ mb: 2, textAlign: 'center' }}>\n          비밀번호 찾기\n        </Typography>\n        <Box\n          component=\"form\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            '& .MuiTextField-root': { margin: 1 }\n          }}\n          onSubmit={handleSubmit}\n        >\n          <Typography variant=\"caption\" sx={{ mb: 2, textAlign: 'center' }}>\n            가입하신 이메일 주소를 입력해 주시면 비밀번호를 재설정할 수 있는 링크를 보내드립니다.\n          </Typography>\n          <TextField id=\"email\" name=\"email\" type=\"email\" label=\"(학교) 이메일\" onChange={handleChange} />\n\n          <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 1 }}>\n            이메일 전송하기\n          </Button>\n          <Link href=\"/auth/login\" sx={{ mt: 1 }}>\n            돌아가기\n          </Link>\n        </Box>\n      </Paper>\n    </PageWrapper>\n  )\n}\n\nexport default FindPassword\n"],"names":["PageWrapper","styled","Box","TextField","props","_jsx","MuiTextField","_objectSpread","size","required","fullWidth","_ref","theme","useTheme","matches","useMediaQuery","breakpoints","up","enqueueSnackbar","useSnackbar","_useState","useState","email","_useState2","_slicedToArray","values","setValues","_jsxs","children","Helmet","Paper","square","sx","my","spacing","padding","flex","maxWidth","_defineProperty","down","py","xs","sm","Typography","component","variant","mb","textAlign","display","flexDirection","alignItems","margin","onSubmit","e","preventDefault","axios","concat","process","then","catch","err","_err$response$data$me","_err$response$data","response","data","message","id","name","type","label","onChange","event","newValues","target","value","Button","mt","Link","href"],"sourceRoot":""}