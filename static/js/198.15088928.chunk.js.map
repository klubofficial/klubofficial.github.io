{"version":3,"file":"static/js/198.15088928.chunk.js","mappings":"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","sources":["components/ClubPreview/index.tsx","components/ClubList/index.tsx","components/PageTitleWrapper/index.tsx","data/types.ts","content/club/Search/index.tsx","data/categories.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Box, Card, CardActionArea, CardContent, Chip, Stack, Typography, useMediaQuery, useTheme } from '@mui/material'\nimport categories from 'src/data/categories'\n\nexport interface ClubPreviewProps {\n  id: number\n  name: string\n  category: string\n  type: string\n}\n\nconst randomColor = () => {\n  const pastelColors = [\n    'rgba(254, 163, 170, 0.3)',\n    'rgba(248, 184, 139, 0.3)',\n    'rgba(250, 248, 13, 0.3)',\n    'rgba(186, 237, 145, 0.3)',\n    'rgba(178, 206, 254, 0.3)',\n    'rgba(242, 162, 232, 0.3)'\n  ]\n  const colorId = Math.floor(Math.random() * pastelColors.length)\n  return pastelColors[colorId]\n}\n\nfunction ClubPreview({ id, name, category, type }: ClubPreviewProps) {\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n\n  return (\n    <Card>\n      <CardActionArea href={`/club/${id}`} sx={{ display: 'flex', flexDirection: matches ? 'column' : 'row' }}>\n        <Box width={matches ? '100%' : '90px'} height=\"90px\" sx={{ backgroundColor: randomColor() }} />\n        <CardContent sx={{ flex: 1 }}>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {name}\n          </Typography>\n          {matches && (\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry\n            </Typography>\n          )}\n          <Stack direction=\"row\" justifyContent=\"flex-start\" spacing={1} sx={{ marginTop: theme.spacing(1) }}>\n            <Chip label={type} size=\"small\" sx={{ padding: theme.spacing(0.5), fontSize: matches ? 13 : 11 }} />\n            <Chip\n              label={categories[category]}\n              size=\"small\"\n              sx={{ padding: theme.spacing(0.5), fontSize: matches ? 13 : 11 }}\n            />\n          </Stack>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n\nexport default ClubPreview\n","import { Grid } from '@mui/material'\nimport ClubPreview, { ClubPreviewProps } from 'src/components/ClubPreview'\n\ninterface ClubListProps {\n  clubs: ClubPreviewProps[]\n}\n\nfunction ClubList({ clubs }: ClubListProps) {\n  return (\n    <Grid container spacing={2}>\n      {clubs &&\n        clubs.map(club => (\n          <Grid item xs={12} sm={6} md={4} lg={3} key={`${club.id} ${club.name}`}>\n            <ClubPreview {...club} />\n          </Grid>\n        ))}\n    </Grid>\n  )\n}\n\nexport default ClubList\n","import { FC, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Container, styled } from '@mui/material'\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(3)};\n`\n)\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  )\n}\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default PageTitleWrapper\n","const types = ['정치/사회', '종교', '봉사', '순수과학', 'IT/공학', '예체능']\n\nexport default types\n","import SearchIcon from '@mui/icons-material/Search'\nimport {\n  Box,\n  Container,\n  FormControl,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Pagination,\n  Select,\n  Stack,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from '@mui/material'\nimport axios from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useEffect, useState } from 'react'\nimport { useAuthHeader } from 'react-auth-kit'\nimport { Helmet } from 'react-helmet-async'\nimport { useSearchParams } from 'react-router-dom'\nimport ClubList from 'src/components/ClubList'\nimport PageTitleWrapper from 'src/components/PageTitleWrapper'\nimport categories from 'src/data/categories'\nimport types from 'src/data/types'\n\ninterface SearchAPIResponse {\n  clubs: {\n    id: number\n    name: string\n    type: string\n    category: string\n  }[]\n  numPages: number\n}\n\nfunction Search() {\n  const [searchParams, setSearchParams] = useSearchParams()\n  const [result, setResult] = useState(null)\n  const authHeader = useAuthHeader()\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n  const [params, setParams] = useState({\n    name: searchParams.get('name') ?? '',\n    category: searchParams.get('category') ?? '',\n    type: searchParams.get('type') ?? '',\n    page: searchParams.has('page') ? parseInt(searchParams.get('page')) : null\n  })\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const search = document.getElementById('search') as HTMLInputElement\n    setParams({ ...params, name: search.value, page: null })\n  }\n\n  useEffect(() => {\n    const nextInit = Object.assign(\n      {},\n      params.name ? { name: params.name } : null,\n      params.category ? { category: params.category } : null,\n      params.type ? { type: params.type } : null,\n      params.page ? { page: params.page } : null\n    )\n    setSearchParams(nextInit)\n  }, [params])\n\n  useEffect(() => {\n    for (const [key, value] of searchParams) {\n      searchParams.set(key, encodeURIComponent(value))\n    }\n    axios\n      .get<SearchAPIResponse>(\n        `${process.env.REACT_APP_APIHOST}/search/clubs?${searchParams.toString()}&count=${encodeURIComponent(\n          matches ? 20 : 10\n        )}`,\n        {\n          headers: { Authorization: authHeader() }\n        }\n      )\n      .then(res => {\n        if (res.status === 200) {\n          if (res.data.clubs.length > 0) setResult(res.data)\n          else enqueueSnackbar('해당하는 동아리가 없습니다', { variant: 'warning' })\n        } else enqueueSnackbar(`브라우저 단에서 실패했습니다. ${res.statusText}`, { variant: 'error' })\n      })\n      .catch(err => {\n        if (err.response.status === 400)\n          enqueueSnackbar(`서버 단에서 실패했습니다. 이유: ${err.response.statusText}`, { variant: 'error' })\n        else if (err.response.status === 401)\n          enqueueSnackbar(`서버 단에서 실패했습니다. 이유: ${err.response.statusText}`, { variant: 'error' })\n        else enqueueSnackbar(`서버 단에서 실패했습니다. 이유: ${err.response.statusText}`, { variant: 'error' })\n      })\n  }, [searchParams])\n\n  return (\n    <>\n      <Helmet>\n        <title>검색 결과</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n              검색 결과\n            </Typography>\n            <Typography variant=\"subtitle2\">키워드와 카테고리, 분류를 활용해 원하는 동아리를 찾아보세요</Typography>\n          </Grid>\n        </Grid>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <FormControl variant=\"outlined\" fullWidth sx={{ marginTop: 2, backgroundColor: 'white' }}>\n            <OutlinedInput\n              id=\"search\"\n              type=\"search\"\n              placeholder=\"동아리 이름을 검색해보세요\"\n              defaultValue={params.name}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton aria-label=\"Search clubs\" type=\"submit\" edge=\"end\">\n                    <SearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </Box>\n      </PageTitleWrapper>\n      <Container\n        sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignItems: 'center' }}\n      >\n        <Stack\n          width=\"100%\"\n          direction={matches ? 'row' : 'column'}\n          spacing={1}\n          justifyContent={'flex-end'}\n          sx={{ marginBottom: 3 }}\n        >\n          <FormControl size=\"small\" fullWidth={!matches}>\n            <InputLabel id=\"category-label\">카테고리</InputLabel>\n            <Select\n              labelId=\"category-label\"\n              id=\"category\"\n              label=\"카테고리\"\n              value={params.category}\n              onChange={e => setParams({ ...params, category: e.target.value, page: null })}\n              sx={{ minWidth: '180px' }}\n            >\n              <MenuItem value=\"\">선택하지 않음</MenuItem>\n              {categories &&\n                Object.keys(categories).map(k => (\n                  <MenuItem key={k} value={k}>\n                    {categories[k]}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n          <FormControl size=\"small\" fullWidth={!matches}>\n            <InputLabel id=\"type-label\">분류</InputLabel>\n            <Select\n              labelId=\"type-label\"\n              id=\"type\"\n              label=\"분류\"\n              value={params.type}\n              onChange={e => setParams({ ...params, type: e.target.value, page: null })}\n              sx={{ minWidth: '180px' }}\n            >\n              <MenuItem value=\"\">선택하지 않음</MenuItem>\n              {types &&\n                types.map(t => (\n                  <MenuItem key={t} value={t}>\n                    {t}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </Stack>\n        <ClubList clubs={result?.clubs} />\n        <Pagination\n          page={params.page ?? 1}\n          count={result?.numPages ?? 1}\n          size={matches ? 'medium' : 'small'}\n          onChange={(e, v) => setParams({ ...params, page: v })}\n          sx={{ my: 3 }}\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default Search\n","const categories = {\n  UNION_CLUB: '연합 동아리',\n  CENTRAL_CLUB: '중앙 동아리',\n  DEPARTMENT_CLUB: '과 동아리'\n}\n\nexport default categories\n"],"names":["randomColor","pastelColors","Math","floor","random","length","id","name","category","type","theme","useTheme","matches","useMediaQuery","breakpoints","up","Card","CardActionArea","href","sx","display","flexDirection","Box","width","height","backgroundColor","CardContent","flex","Typography","gutterBottom","variant","component","color","Stack","direction","justifyContent","spacing","marginTop","Chip","label","size","padding","fontSize","categories","clubs","Grid","container","map","club","item","xs","sm","md","lg","PageTitle","styled","children","className","maxWidth","useSearchParams","searchParams","setSearchParams","useState","result","setResult","authHeader","useAuthHeader","get","page","has","parseInt","params","setParams","enqueueSnackbar","useSnackbar","useEffect","nextInit","Object","assign","key","value","set","encodeURIComponent","axios","process","toString","headers","Authorization","then","res","status","data","statusText","catch","err","response","PageTitleWrapper","alignItems","onSubmit","event","preventDefault","search","document","getElementById","FormControl","fullWidth","OutlinedInput","placeholder","defaultValue","endAdornment","InputAdornment","position","IconButton","edge","Search","Container","marginBottom","InputLabel","Select","labelId","onChange","e","target","minWidth","MenuItem","keys","k","types","t","ClubList","Pagination","count","numPages","v","my","UNION_CLUB","CENTRAL_CLUB","DEPARTMENT_CLUB"],"sourceRoot":""}