{"version":3,"file":"static/js/203.d28fb9e3.chunk.js","mappings":"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","sources":["components/ClubPreview/index.tsx","components/PageTitleWrapper/index.tsx","components/ClubList/index.tsx","content/club/Search/index.tsx","data/types.ts"],"sourcesContent":["import { Box, Card, CardActionArea, CardContent, Chip, Stack, Typography, useMediaQuery, useTheme } from '@mui/material'\n\nimport types from 'src/data/types'\nimport { stringToColor } from 'src/utils'\n\nexport interface ClubPreviewProps {\n  id: number\n  name: string\n  category: string\n  type: string\n  description: string\n}\n\nfunction ClubPreview({ id, name, category, type, description }: ClubPreviewProps) {\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n\n  return (\n    <Card>\n      <CardActionArea href={`/club/${id}`} sx={{ display: 'flex', flexDirection: matches ? 'column' : 'row' }}>\n        <Box width={matches ? '100%' : '90px'} height=\"90px\" sx={{ backgroundColor: stringToColor(name, 0.3) }} />\n        <CardContent sx={{ flex: 1, width: '100%', paddingLeft: '24px', paddingRight: '24px' }}>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {name}\n          </Typography>\n          {matches && (\n            <Typography\n              variant=\"body2\"\n              color=\"text.secondary\"\n              whiteSpace=\"nowrap\"\n              overflow=\"hidden\"\n              textOverflow=\"ellipsis\"\n            >\n              {description}\n            </Typography>\n          )}\n          <Stack direction=\"row\" justifyContent=\"flex-start\" spacing={1} sx={{ marginTop: theme.spacing(1) }}>\n            {types[type] && (\n              <Chip\n                label={types[type]}\n                size=\"small\"\n                sx={{ padding: theme.spacing(0.5), fontSize: matches ? 13 : 11 }}\n              />\n            )}\n            {category && (\n              <Chip label={category} size=\"small\" sx={{ padding: theme.spacing(0.5), fontSize: matches ? 13 : 11 }} />\n            )}\n          </Stack>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n\nexport default ClubPreview\n","import PropTypes from 'prop-types'\nimport { FC, ReactNode } from 'react'\n\nimport { Box, Container, styled } from '@mui/material'\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(3)};\n`\n)\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  )\n}\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default PageTitleWrapper\n","import { Grid } from '@mui/material'\nimport ClubPreview, { ClubPreviewProps } from 'src/components/ClubPreview'\n\ninterface ClubListProps {\n  clubs: ClubPreviewProps[]\n}\n\nfunction ClubList({ clubs }: ClubListProps) {\n  return (\n    <Grid container spacing={2}>\n      {clubs &&\n        clubs.map(club => (\n          <Grid item xs={12} sm={6} md={4} lg={3} key={`${club.id} ${club.name}`}>\n            <ClubPreview {...club} />\n          </Grid>\n        ))}\n    </Grid>\n  )\n}\n\nexport default ClubList\n","import axios from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport { useSearchParams } from 'react-router-dom'\n\nimport SearchIcon from '@mui/icons-material/Search'\nimport {\n  Box,\n  Container,\n  FormControl,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Pagination,\n  Select,\n  Stack,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from '@mui/material'\n\nimport ClubList from 'src/components/ClubList'\nimport PageTitleWrapper from 'src/components/PageTitleWrapper'\nimport orders from 'src/data/SortingOrders'\nimport categories from 'src/data/categories'\nimport types from 'src/data/types'\n\ninterface SearchAPIResponse {\n  clubs: {\n    id: number\n    name: string\n    type: string\n    category: string\n  }[]\n  numPages: number\n}\n\nfunction Search() {\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n  const [searchParams, setSearchParams] = useSearchParams()\n  const [params, setParams] = useState({\n    name: searchParams.get('name') ?? '',\n    category: searchParams.get('category') ?? '',\n    type: searchParams.get('type') ?? '',\n    page: searchParams.has('page') ? parseInt(searchParams.get('page')) : null,\n    order: searchParams.has('order') ? searchParams.get('order') : ''\n  })\n  const [clubs, setClubs] = useState(null)\n  const [numPages, setNumPages] = useState(null)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const search = document.getElementById('search') as HTMLInputElement\n    setParams({ ...params, name: search.value, page: null, order: '' })\n  }\n  const handleChange = event => setParams({ ...params, [event.target.name]: event.target.value, page: null })\n  const handlePageChange = (event, value) => setParams({ ...params, page: value == 1 ? null : value })\n\n  useEffect(() => {\n    const newParams = Object.assign(\n      {},\n      params.name ? { name: params.name } : null,\n      params.category ? { category: params.category } : null,\n      params.type ? { type: params.type } : null,\n      params.page ? { page: params.page } : null,\n      params.order ? { order: params.order } : null\n    )\n    setSearchParams(newParams)\n  }, [params])\n\n  useEffect(() => {\n    const apiParams = Object.assign(\n      {},\n      params.name ? { name: params.name } : null,\n      params.category ? { category: params.category } : null,\n      params.type ? { type: params.type } : null,\n      params.page ? { page: params.page } : null,\n      { count: 12 },\n      params.order ? { order: params.order } : null\n    )\n    axios\n      .get<SearchAPIResponse>(`${process.env.REACT_APP_APIHOST}/search/clubs`, {\n        params: apiParams\n      })\n      .then(res => {\n        setNumPages(res.data?.numPages)\n        setClubs(res.data?.clubs ?? [])\n        if (res.data?.clubs?.length === 0)\n          enqueueSnackbar('주어진 조건에 해당하는 동아리가 없어요 T.T', { variant: 'warning' })\n      })\n      .catch(err =>\n        enqueueSnackbar(err.response.data?.message ?? '서버에서 오류가 발생한 것 같아요. 다시 시도해주세요', {\n          variant: 'error'\n        })\n      )\n  }, [searchParams])\n\n  return (\n    <>\n      <Helmet>\n        <title>검색 결과</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <Stack direction=\"row\" alignItems=\"baseline\">\n              <Typography variant=\"h3\" component=\"h3\" gutterBottom sx={{ marginRight: 1 }}>\n                {params.type === '' ? '검색 결과' : types[params.type]}\n              </Typography>\n              <Typography variant=\"inherit\" gutterBottom>\n                {params.category}\n              </Typography>\n            </Stack>\n            <Typography variant=\"subtitle2\">키워드와 카테고리, 분류를 활용해 원하는 동아리를 찾아보세요</Typography>\n          </Grid>\n        </Grid>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <FormControl variant=\"outlined\" fullWidth sx={{ marginTop: 2, backgroundColor: 'white' }}>\n            <OutlinedInput\n              id=\"search\"\n              type=\"search\"\n              placeholder=\"동아리 이름을 검색해보세요\"\n              defaultValue={params.name}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton aria-label=\"Search clubs\" type=\"submit\" edge=\"end\">\n                    <SearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </Box>\n      </PageTitleWrapper>\n      <Container\n        sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignItems: 'center' }}\n      >\n        <Stack\n          width=\"100%\"\n          direction={matches ? 'row' : 'column'}\n          spacing={1}\n          justifyContent={'flex-end'}\n          sx={{ marginBottom: 3 }}\n        >\n          <FormControl size=\"small\" fullWidth={!matches}>\n            <InputLabel id=\"category-label\">카테고리</InputLabel>\n            <Select\n              labelId=\"category-label\"\n              id=\"category\"\n              name=\"category\"\n              label=\"카테고리\"\n              value={params.category}\n              onChange={handleChange}\n              sx={{ minWidth: '180px' }}\n            >\n              <MenuItem value=\"\">선택하지 않음</MenuItem>\n              {categories?.map(c => (\n                <MenuItem key={c} value={c}>\n                  {c}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl size=\"small\" fullWidth={!matches}>\n            <InputLabel id=\"type-label\">분류</InputLabel>\n            <Select\n              labelId=\"type-label\"\n              id=\"type\"\n              name=\"type\"\n              label=\"분류\"\n              value={params.type}\n              onChange={handleChange}\n              sx={{ minWidth: '180px' }}\n            >\n              <MenuItem value=\"\">선택하지 않음</MenuItem>\n              {types &&\n                Object.keys(types).map(k => (\n                  <MenuItem key={k} value={k}>\n                    {types[k]}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n          <FormControl size=\"small\" fullWidth={!matches}>\n            <InputLabel id=\"order-label\">정렬</InputLabel>\n            <Select\n              labelId=\"order-label\"\n              id=\"order\"\n              name=\"order\"\n              label=\"정렬\"\n              value={params.order}\n              onChange={handleChange}\n              sx={{ minWidth: '180px' }}\n            >\n              <MenuItem value=\"\">선택하지 않음</MenuItem>\n              {orders &&\n                Object.keys(orders).map(k => (\n                  <MenuItem key={k} value={k}>\n                    {orders[k]}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </Stack>\n        <ClubList clubs={clubs} />\n        <Pagination\n          page={params.page ?? 1}\n          count={numPages ?? 1}\n          size={matches ? 'medium' : 'small'}\n          onChange={handlePageChange}\n          sx={{ my: 3 }}\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default Search\n","const types = {\n  // UNION_CLUB: '연합 동아리',\n  CENTRAL_CLUB: '중앙 동아리',\n  DEPARTMENT_CLUB: '과 동아리'\n}\n\nexport default types\n"],"names":["_ref","id","name","category","type","description","theme","useTheme","matches","useMediaQuery","breakpoints","up","_jsx","Card","children","_jsxs","CardActionArea","href","concat","sx","display","flexDirection","Box","width","height","backgroundColor","stringToColor","CardContent","flex","paddingLeft","paddingRight","Typography","gutterBottom","variant","component","color","whiteSpace","overflow","textOverflow","Stack","direction","justifyContent","spacing","marginTop","types","Chip","label","size","padding","fontSize","PageTitle","styled","_ref2","className","Container","maxWidth","clubs","Grid","container","map","club","item","xs","sm","md","lg","ClubPreview","_objectSpread","_searchParams$get","_searchParams$get2","_searchParams$get3","_params$page","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","get","page","has","parseInt","order","_useState2","params","setParams","_useState3","_useState4","setClubs","_useState5","_useState6","numPages","setNumPages","enqueueSnackbar","useSnackbar","handleChange","event","_objectSpread2","_defineProperty","target","value","useEffect","newParams","Object","assign","apiParams","count","axios","process","then","res","_res$data","_res$data$clubs","_res$data2","_res$data3","_res$data3$clubs","data","length","catch","err","_err$response$data$me","_err$response$data","response","message","_Fragment","Helmet","PageTitleWrapper","alignItems","marginRight","onSubmit","preventDefault","search","document","getElementById","FormControl","fullWidth","OutlinedInput","placeholder","defaultValue","endAdornment","InputAdornment","position","IconButton","edge","SearchIcon","marginBottom","InputLabel","Select","labelId","onChange","minWidth","MenuItem","categories","c","keys","k","orders","ClubList","Pagination","my","CENTRAL_CLUB","DEPARTMENT_CLUB"],"sourceRoot":""}