{"version":3,"file":"static/js/287.647a4f79.chunk.js","mappings":"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","sources":["components/ClubPreview/index.tsx","components/ClubList/index.tsx","components/PageTitleWrapper/index.tsx","data/categories.ts","content/club/Search/index.tsx","data/types.ts"],"sourcesContent":["import { Box, Card, CardActionArea, CardContent, Chip, Stack, Typography, useMediaQuery, useTheme } from '@mui/material'\nimport types from 'src/data/types'\nimport { stringToColor } from 'src/utils'\n\nexport interface ClubPreviewProps {\n  clubId: number\n  name: string\n  category: string\n  type: string\n  description: string\n}\n\nfunction ClubPreview({ clubId, name, category, type, description }: ClubPreviewProps) {\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n\n  return (\n    <Card>\n      <CardActionArea href={`/club/${clubId}`} sx={{ display: 'flex', flexDirection: matches ? 'column' : 'row' }}>\n        <Box width={matches ? '100%' : '90px'} height=\"90px\" sx={{ backgroundColor: stringToColor(name, 0.3) }} />\n        <CardContent sx={{ flex: 1 }}>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {name}\n          </Typography>\n          {matches && (\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {description}\n            </Typography>\n          )}\n          <Stack direction=\"row\" justifyContent=\"flex-start\" spacing={1} sx={{ marginTop: theme.spacing(1) }}>\n            <Chip label={types[type]} size=\"small\" sx={{ padding: theme.spacing(0.5), fontSize: matches ? 13 : 11 }} />\n            <Chip label={category} size=\"small\" sx={{ padding: theme.spacing(0.5), fontSize: matches ? 13 : 11 }} />\n          </Stack>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n\nexport default ClubPreview\n","import { Grid } from '@mui/material'\nimport ClubPreview, { ClubPreviewProps } from 'src/components/ClubPreview'\n\ninterface ClubListProps {\n  clubs: ClubPreviewProps[]\n}\n\nfunction ClubList({ clubs }: ClubListProps) {\n  return (\n    <Grid container spacing={2}>\n      {clubs &&\n        clubs.map(club => (\n          <Grid item xs={12} sm={6} md={4} lg={3} key={`${club.clubId} ${club.name}`}>\n            <ClubPreview {...club} />\n          </Grid>\n        ))}\n    </Grid>\n  )\n}\n\nexport default ClubList\n","import { FC, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Container, styled } from '@mui/material'\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(3)};\n`\n)\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  )\n}\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default PageTitleWrapper\n","const categories = ['정치/사회', '종교', '봉사', '순수과학', 'IT/공학', '예체능', '스터디']\n\nexport default categories\n","import SearchIcon from '@mui/icons-material/Search'\nimport {\n  Box,\n  Container,\n  FormControl,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Pagination,\n  Select,\n  Stack,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from '@mui/material'\nimport axios from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport { useSearchParams } from 'react-router-dom'\nimport ClubList from 'src/components/ClubList'\nimport PageTitleWrapper from 'src/components/PageTitleWrapper'\nimport categories from 'src/data/categories'\nimport types from 'src/data/types'\n\ninterface SearchAPIResponse {\n  clubs: {\n    id: number\n    name: string\n    type: string\n    category: string\n  }[]\n  numPages: number\n}\n\nfunction Search() {\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n  const [searchParams, setSearchParams] = useSearchParams()\n  const [params, setParams] = useState({\n    name: searchParams.get('name') ?? '',\n    category: searchParams.get('category') ?? '',\n    type: searchParams.get('type') ?? '',\n    page: searchParams.has('page') ? parseInt(searchParams.get('page')) : null\n  })\n  const [clubs, setClubs] = useState(null)\n  const [numPages, setNumPages] = useState(null)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const search = document.getElementById('search') as HTMLInputElement\n    setParams({ ...params, name: search.value, page: null })\n  }\n  const handleChange = event => setParams({ ...params, [event.target.name]: event.target.value, page: null })\n  const handlePageChange = (event, value) => setParams({ ...params, page: value == 1 ? null : value })\n\n  useEffect(() => {\n    const newParams = Object.assign(\n      {},\n      params.name ? { name: params.name } : null,\n      params.category ? { category: params.category } : null,\n      params.type ? { type: params.type } : null,\n      params.page ? { page: params.page } : null\n    )\n    setSearchParams(newParams)\n  }, [params])\n\n  useEffect(() => {\n    const apiParams = Object.assign(\n      {},\n      params.name ? { name: params.name } : null,\n      params.category ? { category: params.category } : null,\n      params.type ? { type: params.type } : null,\n      params.page ? { page: params.page } : null,\n      matches ? null : { count: 10 }\n    )\n    axios\n      .get<SearchAPIResponse>(`${process.env.REACT_APP_APIHOST}/search/clubs`, {\n        params: apiParams\n      })\n      .then(res => {\n        setNumPages(res.data?.numPages)\n        setClubs(res.data?.clubs ?? [])\n        if (res.data?.clubs?.length === 0)\n          enqueueSnackbar('주어진 조건에 해당하는 동아리가 없어요 T.T', { variant: 'warning' })\n      })\n      .catch(err =>\n        enqueueSnackbar(err.response.data?.message ?? '서버에서 오류가 발생한 것 같아요. 다시 시도해주세요', {\n          variant: 'error'\n        })\n      )\n  }, [searchParams])\n\n  return (\n    <>\n      <Helmet>\n        <title>검색 결과</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n              검색 결과\n            </Typography>\n            <Typography variant=\"subtitle2\">키워드와 카테고리, 분류를 활용해 원하는 동아리를 찾아보세요</Typography>\n          </Grid>\n        </Grid>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <FormControl variant=\"outlined\" fullWidth sx={{ marginTop: 2, backgroundColor: 'white' }}>\n            <OutlinedInput\n              id=\"search\"\n              type=\"search\"\n              placeholder=\"동아리 이름을 검색해보세요\"\n              defaultValue={params.name}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton aria-label=\"Search clubs\" type=\"submit\" edge=\"end\">\n                    <SearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </Box>\n      </PageTitleWrapper>\n      <Container\n        sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignItems: 'center' }}\n      >\n        <Stack\n          width=\"100%\"\n          direction={matches ? 'row' : 'column'}\n          spacing={1}\n          justifyContent={'flex-end'}\n          sx={{ marginBottom: 3 }}\n        >\n          <FormControl size=\"small\" fullWidth={!matches}>\n            <InputLabel id=\"category-label\">카테고리</InputLabel>\n            <Select\n              labelId=\"category-label\"\n              id=\"category\"\n              name=\"category\"\n              label=\"카테고리\"\n              value={params.category}\n              onChange={handleChange}\n              sx={{ minWidth: '180px' }}\n            >\n              <MenuItem value=\"\">선택하지 않음</MenuItem>\n              {categories?.map(c => (\n                <MenuItem key={c} value={c}>\n                  {c}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl size=\"small\" fullWidth={!matches}>\n            <InputLabel id=\"type-label\">분류</InputLabel>\n            <Select\n              labelId=\"type-label\"\n              id=\"type\"\n              name=\"type\"\n              label=\"분류\"\n              value={params.type}\n              onChange={handleChange}\n              sx={{ minWidth: '180px' }}\n            >\n              <MenuItem value=\"\">선택하지 않음</MenuItem>\n              {types &&\n                Object.keys(types).map(k => (\n                  <MenuItem key={k} value={k}>\n                    {types[k]}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </Stack>\n        <ClubList clubs={clubs} />\n        <Pagination\n          page={params.page ?? 1}\n          count={numPages ?? 1}\n          size={matches ? 'medium' : 'small'}\n          onChange={handlePageChange}\n          sx={{ my: 3 }}\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default Search\n","const types = {\n  UNION_CLUB: '연합 동아리',\n  CENTRAL_CLUB: '중앙 동아리',\n  DEPARTMENT_CLUB: '과 동아리'\n}\n\nexport default types\n"],"names":["clubId","name","category","type","description","theme","useTheme","matches","useMediaQuery","breakpoints","up","Card","CardActionArea","href","sx","display","flexDirection","Box","width","height","backgroundColor","stringToColor","CardContent","flex","Typography","gutterBottom","variant","component","color","Stack","direction","justifyContent","spacing","marginTop","Chip","label","types","size","padding","fontSize","clubs","Grid","container","map","club","item","xs","sm","md","lg","PageTitle","styled","children","className","maxWidth","useSearchParams","searchParams","setSearchParams","useState","get","page","has","parseInt","params","setParams","setClubs","numPages","setNumPages","enqueueSnackbar","useSnackbar","handleChange","event","target","value","useEffect","newParams","Object","assign","apiParams","count","axios","process","then","res","data","length","catch","err","response","message","PageTitleWrapper","alignItems","onSubmit","preventDefault","search","document","getElementById","FormControl","fullWidth","OutlinedInput","id","placeholder","defaultValue","endAdornment","InputAdornment","position","IconButton","edge","Search","Container","marginBottom","InputLabel","Select","labelId","onChange","minWidth","MenuItem","categories","c","keys","k","ClubList","Pagination","my","UNION_CLUB","CENTRAL_CLUB","DEPARTMENT_CLUB"],"sourceRoot":""}