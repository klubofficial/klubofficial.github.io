{"version":3,"file":"static/js/3398.4fd1f141.chunk.js","mappings":"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","sources":["components/ClubSettingsField/index.tsx","hooks/api/admin.ts","content/users/admin/index.tsx"],"sourcesContent":["import {\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  type SelectChangeEvent,\n  TextField,\n  styled\n} from '@mui/material'\n\nimport CLUB_BELONGING from 'src/data/belonging'\nimport CLUB_CATEGORIES from 'src/data/categories'\n\nimport type { ClubInformationRequestData } from 'src/hooks/api/settings'\n\ninterface ClubSettings {\n  clubInformation: ClubInformationRequestData & { name?: string }\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleSelect: (e: SelectChangeEvent<string>) => void\n  handleClickEditButton: React.MouseEventHandler<HTMLButtonElement>\n  fixedClubName?: string\n}\n\nconst ClubSettingsField: React.FC<ClubSettings> = ({\n  clubInformation,\n  handleChange,\n  handleSelect,\n  handleClickEditButton,\n  fixedClubName\n}) => {\n  return (\n    <Grid container alignItems=\"center\" mt={2} spacing={2}>\n      <ItemGrid item xs={12}>\n        <TextField\n          fullWidth\n          label=\"동아리명\"\n          name=\"name\"\n          id=\"name\"\n          value={clubInformation.name ?? fixedClubName ?? ''}\n          disabled={!!fixedClubName}\n          helperText={!!fixedClubName ? '동아리명은 수정할 수 없습니다' : ''}\n          onChange={handleChange}\n        />\n      </ItemGrid>\n      <ItemGrid item xs={12} sm={6}>\n        <TextField\n          label=\"동아리 설명\"\n          required\n          name=\"description\"\n          id=\"description\"\n          fullWidth\n          value={clubInformation.description}\n          onChange={handleChange}\n        />\n      </ItemGrid>\n\n      <ItemGrid item xs={12} sm={6}>\n        <TextField\n          label=\"동아리 장소\"\n          name=\"location\"\n          id=\"location\"\n          fullWidth\n          value={clubInformation.location}\n          onChange={handleChange}\n        />\n      </ItemGrid>\n      <ItemGrid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel id=\"belonging-label\">소속</InputLabel>\n          <Select\n            labelId=\"belonging-label\"\n            id=\"belonging\"\n            name=\"belonging\"\n            label=\"소속\"\n            value={clubInformation.belonging}\n            onChange={handleSelect}\n          >\n            <MenuItem value=\"\">선택하지 않음</MenuItem>\n            {CLUB_BELONGING &&\n              CLUB_BELONGING.map((name, idx) => (\n                <MenuItem key={idx} value={name}>\n                  {name}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </ItemGrid>\n      <ItemGrid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel id=\"category-label\">동아리 카테고리</InputLabel>\n          <Select\n            labelId=\"category-label\"\n            id=\"category\"\n            name=\"category\"\n            label=\"카테고리\"\n            value={clubInformation.category}\n            onChange={handleSelect}\n          >\n            <MenuItem value=\"\">선택하지 않음</MenuItem>\n            {CLUB_CATEGORIES &&\n              CLUB_CATEGORIES.map((name, idx) => (\n                <MenuItem key={idx} value={name}>\n                  {name}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </ItemGrid>\n      <ItemGrid item xs={12} justifyContent={'flex-end'}>\n        <Button variant=\"contained\" color=\"success\" onClick={handleClickEditButton}>\n          {fixedClubName ? '수정 / 등록' : '등록'}\n        </Button>\n      </ItemGrid>\n    </Grid>\n  )\n}\n\nexport default ClubSettingsField\n\nconst ItemGrid = styled(Grid)({\n  display: 'flex'\n})\n","import axios, { AxiosError, type AxiosResponse } from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useAuthHeader } from 'react-auth-kit'\nimport type { UseMutationResult } from 'react-query'\nimport { useMutation } from 'react-query'\n\nimport { COMMON_MESSAGE } from 'src/data/messages'\n\nimport type { ClubInformationRequestData } from 'src/hooks/api/settings'\n\nexport type CreateClubInfoRequestData = ClubInformationRequestData & { name: string }\ntype PostClubParams = CreateClubInfoRequestData\n\n/**\n * 동아리 정보 KLUB에 등록\n */\nconst postClub = async (clubInfo: PostClubParams, token: string) => {\n  await axios.post<null, AxiosResponse<null>, PostClubParams>(`${process.env.REACT_APP_APIHOST}/admin/club`, clubInfo, {\n    headers: { Authorization: token }\n  })\n}\n\nexport const useCreateClub = (): UseMutationResult<void, unknown, PostClubParams, void> => {\n  const { enqueueSnackbar } = useSnackbar()\n  const token = useAuthHeader()()\n\n  const mutationFn = (values: CreateClubInfoRequestData) => postClub(values, token)\n\n  return useMutation('postClub', mutationFn, {\n    onSuccess: () => {\n      enqueueSnackbar(COMMON_MESSAGE.ADD_SUCCESS, { variant: 'success' })\n    },\n    onError: error => {\n      if (error instanceof AxiosError) {\n        enqueueSnackbar(error.response?.data?.message ?? COMMON_MESSAGE.ADD_FAIL, { variant: 'error' })\n      } else {\n        enqueueSnackbar(COMMON_MESSAGE.UNKNOWN_ERROR, { variant: 'error' })\n      }\n    }\n  })\n}\n\nexport type ClubLeaderRequestData = {\n  clubName: string\n  studentId: string\n  email: string\n}\n\n/**\n * 동아리의 회장 정보 등록\n */\nconst postClubLeader = async (clubLeaderInfo: ClubLeaderRequestData, token: string) => {\n  await axios.post<null, AxiosResponse<null>, ClubLeaderRequestData>(\n    `${process.env.REACT_APP_APIHOST}/admin/club/superadmin`,\n    clubLeaderInfo,\n    {\n      headers: { Authorization: token }\n    }\n  )\n}\n\nexport const useCreateClubLeader = (): UseMutationResult<void, unknown, ClubLeaderRequestData, void> => {\n  const { enqueueSnackbar } = useSnackbar()\n  const token = useAuthHeader()()\n\n  const mutationFn = (values: ClubLeaderRequestData) => postClubLeader(values, token)\n\n  return useMutation('postCreateClub', mutationFn, {\n    onSuccess: () => {\n      enqueueSnackbar(COMMON_MESSAGE.ADD_SUCCESS, { variant: 'success' })\n    },\n    onError: error => {\n      if (error instanceof AxiosError) {\n        enqueueSnackbar(error.response?.data?.message ?? COMMON_MESSAGE.ADD_FAIL, { variant: 'error' })\n      } else {\n        enqueueSnackbar(COMMON_MESSAGE.UNKNOWN_ERROR, { variant: 'error' })\n      }\n    }\n  })\n}\n","import { useState } from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport { useNavigate } from 'react-router'\n\nimport { Box, Button, Card, Grid, type SelectChangeEvent, TextField, Typography } from '@mui/material'\n\nimport ClubSettingsField from 'src/components/ClubSettingsField'\n\nimport {\n  type ClubLeaderRequestData,\n  type CreateClubInfoRequestData,\n  useCreateClub,\n  useCreateClubLeader\n} from 'src/hooks/api/admin'\n\nfunction AdminPage() {\n  const navigate = useNavigate()\n\n  const createClub = useCreateClub()\n  const createClubLeader = useCreateClubLeader()\n\n  const [clubInformation, setClubInformation] = useState<CreateClubInfoRequestData>({\n    name: '',\n    description: '',\n    category: '',\n    belonging: '',\n    location: ''\n  })\n\n  const [clubLeaderInformation, setClubLeaderInformation] = useState<ClubLeaderRequestData>({\n    clubName: '',\n    studentId: '',\n    email: ''\n  })\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setClubInformation(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  const handleSelect = (e: SelectChangeEvent<string>) => {\n    const { name, value } = e.target\n    setClubInformation(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  const handleLeaderInformationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setClubLeaderInformation(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  const handleRegisterClub: React.MouseEventHandler<HTMLButtonElement> = () => {\n    createClub.mutate(clubInformation)\n  }\n\n  const handleRegisterClubLeader = () => {\n    createClubLeader.mutate(clubLeaderInformation)\n  }\n\n  const handleNavigateBack = () => {\n    navigate('/mypage')\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>KLUB 어드민 페이지</title>\n      </Helmet>\n      <Card style={{ margin: 20, padding: 20, justifyContent: 'center', alignItems: 'center' }}>\n        <Typography variant=\"h3\" component=\"h4\" textAlign={'center'} mb={4}>\n          KLUB 어드민 페이지\n        </Typography>\n        <Box p={4}>\n          <Typography variant=\"h4\" component=\"h4\" textAlign={'center'} mb={4}>\n            동아리 등록\n          </Typography>\n          <ClubSettingsField\n            clubInformation={clubInformation}\n            handleChange={handleChange}\n            handleSelect={handleSelect}\n            handleClickEditButton={handleRegisterClub}\n          />\n          <Typography variant=\"h4\" component=\"h4\" textAlign={'center'} mb={4}>\n            동아리 회장 등록\n          </Typography>\n          <Grid container alignItems=\"center\" mt={2} spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"동아리명\"\n                name=\"clubName\"\n                id=\"clubName\"\n                value={clubLeaderInformation.clubName}\n                helperText={'정확한 동아리명을 입력해주세요'}\n                onChange={handleLeaderInformationChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                label=\"동아리장 학번\"\n                required\n                name=\"studentId\"\n                id=\"club-leader-student-id\"\n                fullWidth\n                value={clubLeaderInformation.studentId}\n                onChange={handleLeaderInformationChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                label=\"동아리장 이메일\"\n                name=\"email\"\n                id=\"email\"\n                fullWidth\n                value={clubLeaderInformation.email}\n                onChange={handleLeaderInformationChange}\n              />\n            </Grid>\n            <Grid display={'flex'} item xs={12} justifyContent={'flex-end'}>\n              <Button variant=\"contained\" color=\"success\" onClick={handleRegisterClubLeader}>\n                등록\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n        <Box display={'flex'} flex={1} justifyContent={'center'}>\n          <Button onClick={handleNavigateBack} color=\"secondary\">\n            뒤로 가기\n          </Button>\n        </Box>\n      </Card>\n    </>\n  )\n}\n\nexport default AdminPage\n"],"names":["_ref","_ref2","_clubInformation$name","clubInformation","handleChange","handleSelect","handleClickEditButton","fixedClubName","_jsxs","Grid","container","alignItems","mt","spacing","children","_jsx","ItemGrid","item","xs","TextField","fullWidth","label","name","id","value","disabled","helperText","onChange","sm","required","description","location","FormControl","InputLabel","Select","labelId","belonging","MenuItem","CLUB_BELONGING","map","idx","category","CLUB_CATEGORIES","justifyContent","Button","variant","color","onClick","styled","display","postClub","_asyncToGenerator","_regeneratorRuntime","mark","_callee","clubInfo","token","wrap","_context","prev","next","axios","post","concat","process","headers","Authorization","stop","_x","_x2","apply","arguments","postClubLeader","_callee2","clubLeaderInfo","_context2","_x3","_x4","navigate","useNavigate","createClub","enqueueSnackbar","useSnackbar","useAuthHeader","useMutation","values","onSuccess","COMMON_MESSAGE","ADD_SUCCESS","onError","error","_error$response$data$","_error$response","_error$response$data","AxiosError","response","data","message","ADD_FAIL","UNKNOWN_ERROR","useCreateClub","createClubLeader","_error$response$data$2","_error$response2","_error$response2$data","useCreateClubLeader","_useState","useState","_useState2","_slicedToArray","setClubInformation","_useState3","clubName","studentId","email","_useState4","clubLeaderInformation","setClubLeaderInformation","handleLeaderInformationChange","e","_e$target3","target","prevState","_objectSpread","_defineProperty","_Fragment","Helmet","Card","style","margin","padding","Typography","component","textAlign","mb","Box","p","ClubSettingsField","_e$target","_e$target2","mutate","flex"],"sourceRoot":""}