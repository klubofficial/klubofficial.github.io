{"version":3,"file":"static/js/937.c941d1f0.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/users/Mypage/PasswordModal/index.tsx","content/users/Mypage/UserDataModal/index.tsx","content/users/Mypage/index.tsx","data/departments.ts"],"sourcesContent":["import { FC, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Container, styled } from '@mui/material'\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(3)};\n`\n)\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  )\n}\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default PageTitleWrapper\n","import { Box, Button, Modal, styled, TextField as MuiTextField, TextFieldProps, Typography } from '@mui/material'\nimport axios, { AxiosResponse } from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useState } from 'react'\nimport { useAuthHeader } from 'react-auth-kit'\n\ninterface PasswordModalProps {\n  open: boolean\n  setOpen: (open: boolean) => void\n  onClose: (event: any, reason: 'backdropClick' | 'escapeKeyDown') => void\n}\n\ninterface UpdatePasswordAPIResponse extends AxiosResponse {\n  currentPassword: string\n  newPassword: string\n}\n\nconst TextField = (props: TextFieldProps) => <MuiTextField size=\"small\" required fullWidth {...props} />\n\nconst ModalBox = styled(Box)(\n  ({ theme }) => `\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    max-width: 360px;\n    width: 90%;\n    background-color: #fff;\n    box-shadow: 24;\n    padding: ${theme.spacing(4)};\n  `\n)\n\nfunction PasswordModal({ open, setOpen, onClose }: PasswordModalProps) {\n  const authHeader = useAuthHeader()\n  const [values, setValues] = useState({ currentPassword: null, newPassword: null })\n  const { enqueueSnackbar } = useSnackbar()\n\n  // const handleChange = event => {\n  //   if (event.target.id === 'confirm-password') setConfirmPassword(event.target.value)\n  //   else {\n  //     const newValues = {\n  //       ...values,\n  //       [event.target.name]: event.target.value\n  //     }\n  //     setValues(newValues)\n  //   }\n  // }\n  const handleChange = event => {\n    if (event.target.type === 'password') {\n      const newPassword = document.getElementById('new-password') as HTMLInputElement\n      const confirmPassword = document.getElementById('confirm-password') as HTMLInputElement\n      if (newPassword.value !== confirmPassword.value) confirmPassword.setCustomValidity(\"Passwords don't match\")\n      else confirmPassword.setCustomValidity('')\n    }\n    if (event.target.id !== 'confirm-password') {\n      const newValues = {\n        ...values,\n        [event.target.name]: event.target.value\n      }\n      setValues(newValues)\n    }\n  }\n  const handleSubmit = e => {\n    e.preventDefault()\n    axios\n      .put<UpdatePasswordAPIResponse>(`${process.env.REACT_APP_APIHOST}/user/password`, values, {\n        headers: { Authorization: authHeader() }\n      })\n      .then(res => {\n        if (res.status === 200) {\n          enqueueSnackbar('사용자 비밀번호를 성공적으로 수정하였습니다.', { variant: 'success' })\n          setOpen(false)\n        } else\n          enqueueSnackbar(`브라우저 단에서 사용자 비밀번호 수정에 실패했습니다. ${res.statusText}`, {\n            variant: 'error'\n          })\n      })\n      .catch(err => {\n        if (err.response.status === 400)\n          enqueueSnackbar(`서버 단에서 사용자 비밀번호 수정에 실패했습니다. 이유: ${err.response.statusText}`, {\n            variant: 'error'\n          })\n        else if (err.response.status === 401)\n          enqueueSnackbar(`서버 단에서 사용자 비밀번호 수정에 실패했습니다. 이유: ${err.response.statusText}`, {\n            variant: 'error'\n          })\n        else\n          enqueueSnackbar(`서버 단에서 사용자 비밀번호 수정에 실패했습니다. 이유: ${err.response.statusText}`, {\n            variant: 'error'\n          })\n      })\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"password-modal-title\"\n      aria-describedby=\"password-modal-description\"\n    >\n      <ModalBox>\n        <Typography component=\"h1\" variant=\"h3\" sx={{ mb: 2, textAlign: 'center' }}>\n          비밀번호 수정\n        </Typography>\n        <Box\n          component=\"form\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            '& .MuiTextField-root': { margin: 1 }\n          }}\n          onSubmit={handleSubmit}\n        >\n          <TextField\n            id=\"current-password\"\n            name=\"currentPassword\"\n            type=\"password\"\n            label=\"현재 비밀번호\"\n            onChange={handleChange}\n          />\n          <TextField id=\"new-password\" name=\"newPassword\" type=\"password\" label=\"새 비밀번호\" onChange={handleChange} />\n          <TextField id=\"confirm-password\" type=\"password\" label=\"비밀번호 확인\" onChange={handleChange} />\n          <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 1 }}>\n            비밀번호 수정\n          </Button>\n          <Button variant=\"outlined\" fullWidth onClick={() => setOpen(false)} sx={{ mt: 1 }}>\n            취소\n          </Button>\n        </Box>\n      </ModalBox>\n    </Modal>\n  )\n}\n\nexport default PasswordModal\n","import {\n  Box,\n  Button,\n  FormControl,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Modal,\n  Select,\n  styled,\n  TextField as MuiTextField,\n  TextFieldProps,\n  Typography\n} from '@mui/material'\nimport axios, { AxiosResponse } from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useEffect, useState } from 'react'\nimport { useAuthHeader } from 'react-auth-kit'\nimport departments from 'src/data/departments'\n\ninterface UserDataModalProps {\n  open: boolean\n  setOpen: (open: boolean) => void\n  onClose: (event: any, reason: 'backdropClick' | 'escapeKeyDown') => void\n  setReloadUserData: (reloadUserData: boolean) => void\n  nickname: string\n  department: string\n  phoneNumber: string\n}\n\ninterface UpdateUserAPIResponse extends AxiosResponse {\n  nickname: string\n  department: string\n  phoneNumber: string\n}\n\nconst TextField = (props: TextFieldProps) => <MuiTextField size=\"small\" required fullWidth {...props} />\n\nconst ModalBox = styled(Box)(\n  ({ theme }) => `\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    max-width: 360px;\n    width: 90%;\n    background-color: #fff;\n    box-shadow: 24;\n    padding: ${theme.spacing(4)};\n  `\n)\n\nfunction UserDataModal({\n  open,\n  setOpen,\n  onClose,\n  setReloadUserData,\n  nickname,\n  department,\n  phoneNumber\n}: UserDataModalProps) {\n  const authHeader = useAuthHeader()\n  const [values, setValues] = useState({ nickname, department, phoneNumber })\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleChange = event => {\n    const newValues = {\n      ...values,\n      [event.target.name]: event.target.value\n    }\n    setValues(newValues)\n  }\n  const handleSubmit = e => {\n    e.preventDefault()\n    axios\n      .put<UpdateUserAPIResponse>(`${process.env.REACT_APP_APIHOST}/user`, values, {\n        headers: { Authorization: authHeader() }\n      })\n      .then(res => {\n        if (res.status === 200) {\n          enqueueSnackbar('사용자 정보를 성공적으로 수정하였습니다.', {\n            variant: 'success'\n          })\n          setOpen(false)\n          setReloadUserData(true)\n        } else\n          enqueueSnackbar(`브라우저 단에서 사용자 정보 수정에 실패했습니다. ${res.statusText}`, { variant: 'error' })\n      })\n      .catch(err => {\n        if (err.response.status === 400)\n          enqueueSnackbar(`서버 단에서 사용자 정보 수정에 실패했습니다. 이유: ${err.response.statusText}`, {\n            variant: 'error'\n          })\n        else if (err.response.status === 401)\n          enqueueSnackbar(`서버 단에서 사용자 정보 수정에 실패했습니다. 이유: ${err.response.statusText}`, {\n            variant: 'error'\n          })\n        else\n          enqueueSnackbar(`서버 단에서 사용자 정보 수정에 실패했습니다. 이유: ${err.response.statusText}`, {\n            variant: 'error'\n          })\n      })\n  }\n\n  useEffect(() => {\n    setValues({ nickname, department, phoneNumber })\n  }, [nickname, department, phoneNumber])\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"userdata-modal-title\"\n      aria-describedby=\"userdata-modal-description\"\n    >\n      <ModalBox>\n        <Typography component=\"h1\" variant=\"h3\" sx={{ mb: 2, textAlign: 'center' }}>\n          사용자 정보 수정\n        </Typography>\n        <Box\n          component=\"form\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            '& .MuiTextField-root': { margin: 1 }\n          }}\n          onSubmit={handleSubmit}\n        >\n          <TextField\n            id=\"nickname\"\n            name=\"nickname\"\n            type=\"text\"\n            label=\"닉네임\"\n            defaultValue={values.nickname}\n            onChange={handleChange}\n          />\n          <TextField\n            id=\"phone-number\"\n            name=\"phoneNumber\"\n            type=\"tel\"\n            label=\"전화번호\"\n            defaultValue={values.phoneNumber}\n            helperText=\"슬래시(-) 기호를 포함하여 입력하세요. (예) 010-0000-0000\"\n            inputProps={{ pattern: '[0-9]{3}-[0-9]{4}-[0-9]{4}' }}\n            onChange={handleChange}\n          />\n          <FormControl sx={{ margin: 1, width: '100%' }} size=\"small\" required>\n            <InputLabel htmlFor=\"department\">학과/학부</InputLabel>\n            <Select\n              id=\"department\"\n              name=\"department\"\n              label=\"학과/학부\"\n              defaultValue={values.department}\n              onChange={handleChange}\n              fullWidth\n            >\n              {departments &&\n                Object.keys(departments).map(college => [\n                  <ListSubheader sx={{ fontWeight: 'bold' }}>{college}</ListSubheader>,\n                  departments[college] &&\n                    departments[college].map(depart => [\n                      <MenuItem value={college === depart ? depart : college + ' ' + depart}>{depart}</MenuItem>\n                    ])\n                ])}\n            </Select>\n          </FormControl>\n          <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 1 }}>\n            정보 수정\n          </Button>\n          <Button variant=\"outlined\" fullWidth onClick={() => setOpen(false)} sx={{ mt: 1 }}>\n            취소\n          </Button>\n        </Box>\n      </ModalBox>\n    </Modal>\n  )\n}\n\nexport default UserDataModal\n","import ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Button,\n  Grid,\n  Skeleton,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from '@mui/material'\nimport axios, { AxiosResponse } from 'axios'\nimport { useSnackbar } from 'notistack'\nimport { useEffect, useState } from 'react'\nimport { useAuthHeader, useAuthUser } from 'react-auth-kit'\nimport { Helmet } from 'react-helmet-async'\nimport PageTitleWrapper from 'src/components/PageTitleWrapper'\nimport PasswordModal from './PasswordModal'\nimport UserDataModal from './UserDataModal'\n\ninterface UserAPIResponse extends AxiosResponse {\n  id: number\n  email: string\n  studentId: string\n  name: string\n  nickname: string\n  department: string\n  phoneNumber: string\n}\n\nfunction Mypage() {\n  const authHeader = useAuthHeader()\n  const [userData, setUserData] = useState(null)\n  const [reloadUserData, setReloadUserData] = useState(false)\n  const [userDataModal, setUserDataModal] = useState(false)\n  const [passwordModal, setPasswordModal] = useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const authUser = useAuthUser()\n\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('md'))\n\n  useEffect(() => {\n    setUserData(null)\n    axios\n      .get<UserAPIResponse>(`${process.env.REACT_APP_APIHOST}/user`, {\n        headers: { Authorization: authHeader() }\n      })\n      .then(res => {\n        if (res.status === 200) setUserData(res.data)\n        else enqueueSnackbar(`브라우저 단에서 실패했습니다. ${res.statusText}`, { variant: 'error' })\n      })\n      .catch(err => {\n        if (err.response.status === 401)\n          enqueueSnackbar(`서버 단에서 실패했습니다. 이유: ${err.response.statusText}`, { variant: 'error' })\n        else enqueueSnackbar(`서버 단에서 실패했습니다. 이유: ${err.response.statusText}`, { variant: 'error' })\n      })\n  }, [reloadUserData])\n\n  return (\n    <>\n      <Helmet>\n        <title>사용자 정보</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n              마이페이지\n            </Typography>\n            <Typography variant=\"subtitle2\">KLUB에 등록된 {authUser().name} 님의 정보입니다</Typography>\n          </Grid>\n        </Grid>\n      </PageTitleWrapper>\n      <Box sx={{ px: matches ? 3 : 0 }}>\n        <Accordion defaultExpanded={true} square={!matches}>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel-content\" id=\"panel-header\">\n            <Typography variant=\"h4\" component=\"h4\">\n              사용자 정보\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails id=\"panel-content\">\n            <Grid container spacing={2}>\n              <Grid item xs={4} md={2} sx={{ textAlign: 'right' }}>\n                <Typography sx={{ fontWeight: 'bold' }}>이름</Typography>\n              </Grid>\n              <Grid item xs={8} md={10}>\n                {userData ? (\n                  <Typography>{userData.name}</Typography>\n                ) : (\n                  <Skeleton variant=\"text\" width={150} sx={{ fontSize: 14 }} />\n                )}\n              </Grid>\n              <Grid item xs={4} md={2} sx={{ textAlign: 'right' }}>\n                <Typography sx={{ fontWeight: 'bold' }}>닉네임</Typography>\n              </Grid>\n              <Grid item xs={8} md={10}>\n                {userData ? (\n                  <Typography>{userData.nickname}</Typography>\n                ) : (\n                  <Skeleton variant=\"text\" width={150} sx={{ fontSize: 14 }} />\n                )}\n              </Grid>\n              <Grid item xs={4} md={2} sx={{ textAlign: 'right' }}>\n                <Typography sx={{ fontWeight: 'bold' }}>이메일</Typography>\n              </Grid>\n              <Grid item xs={8} md={10}>\n                {userData ? (\n                  <Typography>{userData.email}</Typography>\n                ) : (\n                  <Skeleton variant=\"text\" width={150} sx={{ fontSize: 14 }} />\n                )}\n              </Grid>\n              <Grid item xs={4} md={2} sx={{ textAlign: 'right' }}>\n                <Typography sx={{ fontWeight: 'bold' }}>학번</Typography>\n              </Grid>\n              <Grid item xs={8} md={10}>\n                {userData ? (\n                  <Typography>{userData.studentId}</Typography>\n                ) : (\n                  <Skeleton variant=\"text\" width={150} sx={{ fontSize: 14 }} />\n                )}\n              </Grid>\n              <Grid item xs={4} md={2} sx={{ textAlign: 'right' }}>\n                <Typography sx={{ fontWeight: 'bold' }}>학과/학부</Typography>\n              </Grid>\n              <Grid item xs={8} md={10}>\n                {userData ? (\n                  <Typography>{userData.department}</Typography>\n                ) : (\n                  <Skeleton variant=\"text\" width={150} sx={{ fontSize: 14 }} />\n                )}\n              </Grid>\n              <Grid item xs={4} md={2} sx={{ textAlign: 'right' }}>\n                <Typography sx={{ fontWeight: 'bold' }}>전화번호</Typography>\n              </Grid>\n              <Grid item xs={8} md={10}>\n                {userData ? (\n                  <Typography>{userData.phoneNumber}</Typography>\n                ) : (\n                  <Skeleton variant=\"text\" width={150} sx={{ fontSize: 14 }} />\n                )}\n              </Grid>\n            </Grid>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: matches ? 'row' : 'column',\n                justifyContent: matches ? 'flex-end' : 'center',\n                alignItems: 'center',\n                marginTop: 2\n              }}\n            >\n              <Button fullWidth={!matches} onClick={() => setUserDataModal(true)}>\n                정보 수정\n              </Button>\n              <UserDataModal\n                open={userDataModal}\n                setOpen={setUserDataModal}\n                onClose={() => setUserDataModal(false)}\n                setReloadUserData={setReloadUserData}\n                nickname={userData?.nickname}\n                department={userData?.department}\n                phoneNumber={userData?.phoneNumber}\n              />\n              <Button fullWidth={!matches} onClick={() => setPasswordModal(true)}>\n                비밀번호 수정\n              </Button>\n              <PasswordModal open={passwordModal} setOpen={setPasswordModal} onClose={() => setPasswordModal(false)} />\n            </Box>\n          </AccordionDetails>\n        </Accordion>\n      </Box>\n    </>\n  )\n}\n\nexport default Mypage\n","const departments = {\n  경영대학: ['경영학과'],\n  문과대학: [\n    '국어국문학과',\n    '철학과',\n    '한국사학과',\n    '사학과',\n    '사회학과',\n    '한문학과',\n    '영어영문학과',\n    '독어독문학과',\n    '불어불문학과',\n    '중어중문학과',\n    '노어노문학과',\n    '일어일문학과',\n    '서어서문학과',\n    '언어학과'\n  ],\n  생명과학대학: ['생명과학부', '생명공학부', '식품공학과', '환경생태공학부', '식품자원경제학과'],\n  정경대학: ['정치외교학과', '경제학과', '통계학과', '행정학과'],\n  이과대학: ['수학과', '물리학과', '화학과', '지구환경과학과'],\n  공과대학: [\n    '화공생명공학과',\n    '신소재공학부',\n    '건축사회환경공학부',\n    '건축학과',\n    '기계공학부',\n    '산업경영공학부',\n    '전기전자공학부',\n    '융합에너지공학과',\n    '반도체공학과',\n    '차세대통신학과'\n  ],\n  의과대학: ['의(예)학과'],\n  사범대학: [\n    '교육학과',\n    '국어교육과',\n    '영어교육과',\n    '지리교육과',\n    '역사교육과',\n    '가정교육과',\n    '수학교육과',\n    '체육교육과'\n  ],\n  간호대학: ['간호학과'],\n  정보대학: ['컴퓨터학과', '데이터과학과'],\n  디자인조형학부: ['디자인조형학부'],\n  국제대학: ['국제학부', '글로벌한국융합학부'],\n  미디어학부: ['미디어학부'],\n  보건과학대학: ['바이오의공학부', '바이오시스템의과학부', '보건환경융합과학부', '보건정책관리학부'],\n  자유전공학부: ['자유전공학부'],\n  스마트보안학부: ['스마트보안학부'],\n  사이버국방학과: ['사이버국방학과'],\n  심리학부: ['심리학부'],\n  스마트모빌리티학부: ['스마트모빌리티학부']\n}\n\nexport default departments\n"],"names":["PageTitle","styled","Box","theme","spacing","children","className","maxWidth","TextField","props","size","required","fullWidth","ModalBox","open","setOpen","onClose","authHeader","useAuthHeader","useState","currentPassword","newPassword","values","setValues","enqueueSnackbar","useSnackbar","handleChange","event","target","type","document","getElementById","confirmPassword","value","setCustomValidity","id","newValues","name","Modal","Typography","component","variant","sx","mb","textAlign","display","flexDirection","alignItems","margin","onSubmit","e","preventDefault","axios","process","REACT_APP_APIHOST","headers","Authorization","then","res","status","statusText","catch","err","response","label","onChange","Button","mt","onClick","setReloadUserData","nickname","department","phoneNumber","useEffect","defaultValue","helperText","inputProps","pattern","FormControl","width","InputLabel","htmlFor","Select","departments","Object","keys","map","college","ListSubheader","fontWeight","depart","MenuItem","userData","setUserData","reloadUserData","userDataModal","setUserDataModal","passwordModal","setPasswordModal","authUser","useAuthUser","useTheme","matches","useMediaQuery","breakpoints","up","data","PageTitleWrapper","Grid","container","item","gutterBottom","px","Accordion","defaultExpanded","square","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","xs","md","Skeleton","fontSize","email","studentId","justifyContent","marginTop","경영대학","문과대학","생명과학대학","정경대학","이과대학","공과대학","의과대학","사범대학","간호대학","정보대학","디자인조형학부","국제대학","미디어학부","보건과학대학","자유전공학부","스마트보안학부","사이버국방학과","심리학부","스마트모빌리티학부"],"sourceRoot":""}